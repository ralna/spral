Search.setIndex({"alltitles": {"Advanced subroutines": [[10, "advanced-subroutines"]], "Algorithm": [[4, "algorithm"]], "Auction Algorithm": [[9, "auction-algorithm"]], "BLAS": [[3, "blas"]], "Basic Subroutines": [[10, "basic-subroutines"]], "Building with Autotools:": [[3, "building-with-autotools"]], "Building with Meson:": [[3, "building-with-meson"]], "Citing SPRAL or SSIDS": [[3, "citing-spral-or-ssids"]], "Compilers and compiler options": [[3, "compilers-and-compiler-options"]], "Compressed Sparse Column (CSC) Format": [[1, null]], "Coordinate (Coord) Format": [[0, null]], "Data checking": [[10, "data-checking"]], "Data types": [[5, "data-types"]], "Data-types": [[9, "data-types"], [9, "id4"], [9, "id10"]], "Derived types": [[4, "derived-types"], [8, "derived-types"], [10, "derived-types"], [11, "derived-types"], [12, "derived-types"], [13, "derived-types"]], "Driver Program": [[10, "driver-program"]], "Error estimation": [[12, "error-estimation"], [13, "error-estimation"]], "Example": [[4, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [9, "id5"], [9, "id11"], [10, "example"]], "Examples": [[11, "examples"], [12, "examples"], [13, "examples"]], "Factorization performed": [[10, "factorization-performed"]], "Generalized problem": [[13, "generalized-problem"]], "Generalized problems": [[12, "generalized-problems"]], "Generation of random values": [[8, "generation-of-random-values"]], "Hermitian example": [[11, "hermitian-example"]], "Hungarian Algorithm": [[9, "hungarian-algorithm"]], "Improving eigenvector accuracy": [[13, "improving-eigenvector-accuracy"]], "In spral_random_integer()": [[6, "in-spral-random-integer"]], "In spral_random_logical()": [[6, "in-spral-random-logical"]], "In spral_random_real()": [[6, "in-spral-random-real"]], "Indices and tables": [[2, "indices-and-tables"]], "Initial estimate": [[4, "initial-estimate"]], "Installation": [[3, null]], "LSMR - Sparse Least Squares LSMR Solver": [[4, null]], "Licence": [[3, "licence"]], "MATRIX_UTIL - Matrix utilities": [[5, null]], "METIS": [[3, "metis"]], "Macros": [[7, "macros"]], "Major version history": [[12, "major-version-history"], [13, "major-version-history"]], "Method": [[4, "method"], [6, "method"], [7, "method"], [8, "method"], [9, "method"], [9, "equilib-algorithm-method"], [9, "hungarian-algorithm-method"], [10, "method"], [11, "method"], [12, "method"], [13, "method"]], "Norm-equilibration Algorithm": [[9, "norm-equilibration-algorithm"]], "Notation": [[4, "notation"]], "Notes": [[3, "notes"]], "Options to meson": [[3, "options-to-meson"]], "Other options to configure": [[3, "other-options-to-configure"]], "Partition of work across available resources": [[10, "partition-of-work-across-available-resources"]], "Preconditioning example": [[11, "preconditioning-example"], [12, "preconditioning-example"], [13, "preconditioning-example"]], "Purpose": [[4, "purpose"], [5, "purpose"], [6, "purpose"], [7, "purpose"], [8, "purpose"], [9, "purpose"], [10, "purpose"], [11, "purpose"], [12, "purpose"], [13, "purpose"]], "RANDOM - Pseudo-random number generator": [[6, null]], "RANDOM_MATRIX - Pseudo-random Matrix Generator": [[7, null]], "RUTHERFORD_BOEING - RB File Utilities": [[8, null]], "Random Seed": [[6, "random-seed"]], "Reading a matrix": [[8, "reading-a-matrix"]], "References": [[4, "references"], [10, "references"], [11, "references"], [12, "references"], [13, "references"]], "Return codes": [[8, "return-codes"], [8, "exit-status"]], "Routines": [[6, "routines"], [7, "routines"], [9, "routines"], [9, "id3"], [9, "id9"]], "Rutherford Boeing File format": [[8, "rutherford-boeing-file-format"]], "SCALING - Sparse matrix scalings": [[9, null]], "SSIDS - Sparse Symmetric Indefinite Direct Solver": [[10, null]], "SSMFE - Sparse Symmetric Matrix-Free Eigensolver": [[11, null]], "SSMFE_CORE - Sparse Symmetric Matrix-Free Eigensolver (Core Algorithm)": [[12, null]], "SSMFE_EXPERT - Sparse Symmetric Matrix-Free Eigensolver (Expert interface)": [[13, null]], "Scaling": [[4, "scaling"]], "Seed Initialization": [[7, "seed-initialization"]], "Shift-and-invert example": [[11, "shift-and-invert-example"]], "Small Leaf Subtrees": [[10, "small-leaf-subtrees"]], "Standard problem": [[12, "standard-problem"], [13, "standard-problem"]], "Stopping criteria": [[13, "stopping-criteria"]], "Subroutines": [[4, "subroutines"], [8, "subroutines"], [11, "subroutines"], [12, "subroutines"], [13, "subroutines"]], "Support": [[3, "support"]], "The Sparse Parallel Robust Algorithms Library": [[2, null]], "The algorithm": [[12, "the-algorithm"], [13, "the-algorithm"]], "The use of shifted matrix factorization": [[13, "the-use-of-shifted-matrix-factorization"]], "Third-party libraries": [[3, "third-party-libraries"]], "Type code": [[8, "type-code"]], "Usage overview": [[10, "usage-overview"], [11, "usage-overview"], [12, "usage-overview"], [13, "usage-overview"]], "Version history": [[4, "version-history"], [5, "version-history"], [7, "version-history"], [8, "version-history"], [11, "version-history"]], "Writing a matrix": [[8, "writing-a-matrix"]]}, "docnames": ["coord_format", "csc_format", "index", "install", "lsmr", "matrix_util", "random", "random_matrix", "rutherford_boeing", "scaling", "ssids", "ssmfe", "ssmfe_core", "ssmfe_expert"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["coord_format.rst", "csc_format.rst", "index.rst", "install.rst", "lsmr.rst", "matrix_util.rst", "random.rst", "random_matrix.rst", "rutherford_boeing.rst", "scaling.rst", "ssids.rst", "ssmfe.rst", "ssmfe_core.rst", "ssmfe_expert.rst"], "indexentries": {"flag (c member)": [[9, "c.flag", false]], "hungarian_inform (fortran type)": [[9, "f/_/hungarian_inform", false]], "lsmr_free (c function)": [[4, "c.lsmr_free", false]], "matched (c member)": [[9, "c.matched", false]], "phonynameduetoerror.abs_tol_lambda (c member)": [[13, "c.PhonyNameDueToError.abs_tol_lambda", false]], "phonynameduetoerror.abs_tol_residual (c member)": [[11, "c.PhonyNameDueToError.abs_tol_residual", false], [13, "c.PhonyNameDueToError.abs_tol_residual", false]], "phonynameduetoerror.action (c member)": [[10, "c.PhonyNameDueToError.action", false]], "phonynameduetoerror.alpha (c member)": [[13, "c.PhonyNameDueToError.alpha", false]], "phonynameduetoerror.array_base (c member)": [[9, "c.PhonyNameDueToError.array_base", false], [10, "c.PhonyNameDueToError.array_base", false]], "phonynameduetoerror.atol (c member)": [[4, "c.PhonyNameDueToError.atol", false]], "phonynameduetoerror.beta (c member)": [[13, "c.PhonyNameDueToError.beta", false]], "phonynameduetoerror.btol (c member)": [[4, "c.PhonyNameDueToError.btol", false]], "phonynameduetoerror.cf_max (c member)": [[12, "c.PhonyNameDueToError.cf_max", false]], "phonynameduetoerror.condap (c member)": [[4, "c.PhonyNameDueToError.condAP", false]], "phonynameduetoerror.conlim (c member)": [[4, "c.PhonyNameDueToError.conlim", false]], "phonynameduetoerror.converged (c member)": [[12, "c.PhonyNameDueToError.converged", false], [13, "c.PhonyNameDueToError.converged", false]], "phonynameduetoerror.cpu_block_size (c member)": [[10, "c.PhonyNameDueToError.cpu_block_size", false]], "phonynameduetoerror.cpu_flops (c member)": [[10, "c.PhonyNameDueToError.cpu_flops", false]], "phonynameduetoerror.ctest (c member)": [[4, "c.PhonyNameDueToError.ctest", false]], "phonynameduetoerror.cublas_error (c member)": [[10, "c.PhonyNameDueToError.cublas_error", false]], "phonynameduetoerror.cuda_error (c member)": [[10, "c.PhonyNameDueToError.cuda_error", false]], "phonynameduetoerror.eps_initial (c member)": [[9, "c.PhonyNameDueToError.eps_initial", false]], "phonynameduetoerror.err_est (c member)": [[12, "c.PhonyNameDueToError.err_est", false], [13, "c.PhonyNameDueToError.err_est", false]], "phonynameduetoerror.err_lambda (c member)": [[12, "c.PhonyNameDueToError.err_lambda", false]], "phonynameduetoerror.err_x (c member)": [[12, "c.PhonyNameDueToError.err_x", false], [13, "c.PhonyNameDueToError.err_x", false]], "phonynameduetoerror.extra_left (c member)": [[12, "c.PhonyNameDueToError.extra_left", false], [13, "c.PhonyNameDueToError.extra_left", false]], "phonynameduetoerror.extra_right (c member)": [[12, "c.PhonyNameDueToError.extra_right", false], [13, "c.PhonyNameDueToError.extra_right", false]], "phonynameduetoerror.flag (c member)": [[4, "c.PhonyNameDueToError.flag", false], [9, "c.PhonyNameDueToError.flag", false], [10, "c.PhonyNameDueToError.flag", false], [12, "c.PhonyNameDueToError.flag", false], [13, "c.PhonyNameDueToError.flag", false]], "phonynameduetoerror.gpu_flops (c member)": [[10, "c.PhonyNameDueToError.gpu_flops", false]], "phonynameduetoerror.gpu_perf_coeff (c member)": [[10, "c.PhonyNameDueToError.gpu_perf_coeff", false]], "phonynameduetoerror.gpus (c member)": [[10, "c.PhonyNameDueToError.gpus", false]], "phonynameduetoerror.i (c member)": [[13, "c.PhonyNameDueToError.i", false]], "phonynameduetoerror.iteration (c member)": [[12, "c.PhonyNameDueToError.iteration", false], [13, "c.PhonyNameDueToError.iteration", false]], "phonynameduetoerror.iterations (c member)": [[9, "c.PhonyNameDueToError.iterations", false]], "phonynameduetoerror.itn (c member)": [[4, "c.PhonyNameDueToError.itn", false]], "phonynameduetoerror.itn_test (c member)": [[4, "c.PhonyNameDueToError.itn_test", false]], "phonynameduetoerror.itnlim (c member)": [[4, "c.PhonyNameDueToError.itnlim", false]], "phonynameduetoerror.j (c member)": [[13, "c.PhonyNameDueToError.j", false]], "phonynameduetoerror.job (c member)": [[11, "c.PhonyNameDueToError.job", false], [13, "c.PhonyNameDueToError.job", false]], "phonynameduetoerror.jx (c member)": [[13, "c.PhonyNameDueToError.jx", false]], "phonynameduetoerror.jy (c member)": [[13, "c.PhonyNameDueToError.jy", false]], "phonynameduetoerror.k (c member)": [[13, "c.PhonyNameDueToError.k", false]], "phonynameduetoerror.kx (c member)": [[13, "c.PhonyNameDueToError.kx", false]], "phonynameduetoerror.ky (c member)": [[13, "c.PhonyNameDueToError.ky", false]], "phonynameduetoerror.left (c member)": [[13, "c.PhonyNameDueToError.left", false]], "phonynameduetoerror.left_gap (c member)": [[11, "c.PhonyNameDueToError.left_gap", false], [13, "c.PhonyNameDueToError.left_gap", false]], "phonynameduetoerror.localsize (c member)": [[4, "c.PhonyNameDueToError.localSize", false]], "phonynameduetoerror.matched (c member)": [[9, "c.PhonyNameDueToError.matched", false]], "phonynameduetoerror.matrix_dup (c member)": [[10, "c.PhonyNameDueToError.matrix_dup", false]], "phonynameduetoerror.matrix_missing_diag (c member)": [[10, "c.PhonyNameDueToError.matrix_missing_diag", false]], "phonynameduetoerror.matrix_outrange (c member)": [[10, "c.PhonyNameDueToError.matrix_outrange", false]], "phonynameduetoerror.matrix_rank (c member)": [[10, "c.PhonyNameDueToError.matrix_rank", false]], "phonynameduetoerror.max_iterations (c member)": [[9, "c.PhonyNameDueToError.max_iterations", false], [11, "c.PhonyNameDueToError.max_iterations", false], [13, "c.PhonyNameDueToError.max_iterations", false]], "phonynameduetoerror.max_left (c member)": [[11, "c.PhonyNameDueToError.max_left", false], [13, "c.PhonyNameDueToError.max_left", false]], "phonynameduetoerror.max_right (c member)": [[11, "c.PhonyNameDueToError.max_right", false], [13, "c.PhonyNameDueToError.max_right", false]], "phonynameduetoerror.max_unchanged (c member)": [[9, "c.PhonyNameDueToError.max_unchanged", false]], "phonynameduetoerror.maxdepth (c member)": [[10, "c.PhonyNameDueToError.maxdepth", false]], "phonynameduetoerror.maxfront (c member)": [[10, "c.PhonyNameDueToError.maxfront", false]], "phonynameduetoerror.maxsupernode (c member)": [[10, "c.PhonyNameDueToError.maxsupernode", false]], "phonynameduetoerror.min_gap (c member)": [[12, "c.PhonyNameDueToError.min_gap", false]], "phonynameduetoerror.min_proportion (c member)": [[9, "c.PhonyNameDueToError.min_proportion", false]], "phonynameduetoerror.minaprod (c member)": [[12, "c.PhonyNameDueToError.minAprod", false], [13, "c.PhonyNameDueToError.minAprod", false]], "phonynameduetoerror.minbprod (c member)": [[12, "c.PhonyNameDueToError.minBprod", false], [13, "c.PhonyNameDueToError.minBprod", false]], "phonynameduetoerror.nemin (c member)": [[10, "c.PhonyNameDueToError.nemin", false]], "phonynameduetoerror.next_left (c member)": [[13, "c.PhonyNameDueToError.next_left", false]], "phonynameduetoerror.next_right (c member)": [[13, "c.PhonyNameDueToError.next_right", false]], "phonynameduetoerror.ngpu (c member)": [[10, "c.PhonyNameDueToError.ngpu", false]], "phonynameduetoerror.non_converged (c member)": [[13, "c.PhonyNameDueToError.non_converged", false]], "phonynameduetoerror.normap (c member)": [[4, "c.PhonyNameDueToError.normAP", false]], "phonynameduetoerror.normr (c member)": [[4, "c.PhonyNameDueToError.normr", false]], "phonynameduetoerror.normy (c member)": [[4, "c.PhonyNameDueToError.normy", false]], "phonynameduetoerror.nproc (c member)": [[10, "c.PhonyNameDueToError.nproc", false]], "phonynameduetoerror.num_delay (c member)": [[10, "c.PhonyNameDueToError.num_delay", false]], "phonynameduetoerror.num_factor (c member)": [[10, "c.PhonyNameDueToError.num_factor", false]], "phonynameduetoerror.num_flops (c member)": [[10, "c.PhonyNameDueToError.num_flops", false]], "phonynameduetoerror.num_neg (c member)": [[10, "c.PhonyNameDueToError.num_neg", false]], "phonynameduetoerror.num_sup (c member)": [[10, "c.PhonyNameDueToError.num_sup", false]], "phonynameduetoerror.num_two (c member)": [[10, "c.PhonyNameDueToError.num_two", false]], "phonynameduetoerror.nx (c member)": [[11, "c.PhonyNameDueToError.nx", false], [13, "c.PhonyNameDueToError.nx", false]], "phonynameduetoerror.ny (c member)": [[13, "c.PhonyNameDueToError.ny", false]], "phonynameduetoerror.ordering (c member)": [[10, "c.PhonyNameDueToError.ordering", false]], "phonynameduetoerror.pivot_method (c member)": [[10, "c.PhonyNameDueToError.pivot_method", false]], "phonynameduetoerror.print_freq_head (c member)": [[4, "c.PhonyNameDueToError.print_freq_head", false]], "phonynameduetoerror.print_freq_itn (c member)": [[4, "c.PhonyNameDueToError.print_freq_itn", false]], "phonynameduetoerror.print_level (c member)": [[10, "c.PhonyNameDueToError.print_level", false], [11, "c.PhonyNameDueToError.print_level", false], [13, "c.PhonyNameDueToError.print_level", false]], "phonynameduetoerror.rel_tol_lambda (c member)": [[11, "c.PhonyNameDueToError.rel_tol_lambda", false], [13, "c.PhonyNameDueToError.rel_tol_lambda", false]], "phonynameduetoerror.rel_tol_residual (c member)": [[11, "c.PhonyNameDueToError.rel_tol_residual", false], [13, "c.PhonyNameDueToError.rel_tol_residual", false]], "phonynameduetoerror.residual_norms (c member)": [[12, "c.PhonyNameDueToError.residual_norms", false], [13, "c.PhonyNameDueToError.residual_norms", false]], "phonynameduetoerror.right (c member)": [[13, "c.PhonyNameDueToError.right", false]], "phonynameduetoerror.right_gap (c member)": [[11, "c.PhonyNameDueToError.right_gap", false], [13, "c.PhonyNameDueToError.right_gap", false]], "phonynameduetoerror.scale_if_singular (c member)": [[9, "c.PhonyNameDueToError.scale_if_singular", false]], "phonynameduetoerror.scaling (c member)": [[10, "c.PhonyNameDueToError.scaling", false]], "phonynameduetoerror.small (c member)": [[10, "c.PhonyNameDueToError.small", false]], "phonynameduetoerror.small_subtree_threshold (c member)": [[10, "c.PhonyNameDueToError.small_subtree_threshold", false]], "phonynameduetoerror.stat (c member)": [[4, "c.PhonyNameDueToError.stat", false], [9, "c.PhonyNameDueToError.stat", false], [10, "c.PhonyNameDueToError.stat", false], [12, "c.PhonyNameDueToError.stat", false], [13, "c.PhonyNameDueToError.stat", false]], "phonynameduetoerror.tol (c member)": [[9, "c.PhonyNameDueToError.tol", false]], "phonynameduetoerror.tol_x (c member)": [[11, "c.PhonyNameDueToError.tol_x", false], [13, "c.PhonyNameDueToError.tol_x", false]], "phonynameduetoerror.u (c member)": [[10, "c.PhonyNameDueToError.u", false]], "phonynameduetoerror.unit_diagnostic (c member)": [[11, "c.PhonyNameDueToError.unit_diagnostic", false], [13, "c.PhonyNameDueToError.unit_diagnostic", false]], "phonynameduetoerror.unit_diagnostics (c member)": [[4, "c.PhonyNameDueToError.unit_diagnostics", false], [10, "c.PhonyNameDueToError.unit_diagnostics", false]], "phonynameduetoerror.unit_error (c member)": [[4, "c.PhonyNameDueToError.unit_error", false], [10, "c.PhonyNameDueToError.unit_error", false], [11, "c.PhonyNameDueToError.unit_error", false], [13, "c.PhonyNameDueToError.unit_error", false]], "phonynameduetoerror.unit_warning (c member)": [[10, "c.PhonyNameDueToError.unit_warning", false], [11, "c.PhonyNameDueToError.unit_warning", false], [13, "c.PhonyNameDueToError.unit_warning", false]], "phonynameduetoerror.unmatchable (c member)": [[9, "c.PhonyNameDueToError.unmatchable", false]], "phonynameduetoerror.user_x (c member)": [[11, "c.PhonyNameDueToError.user_x", false], [13, "c.PhonyNameDueToError.user_x", false]], "phonynameduetoerror.val_format (c member)": [[8, "c.PhonyNameDueToError.val_format", false]], "phonynameduetoerror.x (c member)": [[11, "c.PhonyNameDueToError.x", false]], "phonynameduetoerror.y (c member)": [[11, "c.PhonyNameDueToError.y", false]], "rb_peek (c function)": [[8, "c.rb_peek", false]], "rb_read_options (c type)": [[8, "c.rb_read_options", false]], "rb_read_options.add_diagonal (c member)": [[8, "c.rb_read_options.add_diagonal", false]], "rb_read_options.extra_space (c member)": [[8, "c.rb_read_options.extra_space", false]], "rb_read_options.lwr_upr_full (c member)": [[8, "c.rb_read_options.lwr_upr_full", false]], "rb_read_options.values (c member)": [[8, "c.rb_read_options.values", false]], "spral_lsmr_default_options (c function)": [[4, "c.spral_lsmr_default_options", false]], "spral_lsmr_solve (c function)": [[4, "c.spral_lsmr_solve", false]], "spral_random_integer (c function)": [[6, "c.spral_random_integer", false]], "spral_random_logical (c function)": [[6, "c.spral_random_logical", false]], "spral_random_long (c function)": [[6, "c.spral_random_long", false]], "spral_random_matrix_generate (c function)": [[7, "c.spral_random_matrix_generate", false]], "spral_random_matrix_generate_long (c function)": [[7, "c.spral_random_matrix_generate_long", false]], "spral_random_real (c function)": [[6, "c.spral_random_real", false]], "spral_rb_default_read_options (c function)": [[8, "c.spral_rb_default_read_options", false]], "spral_rb_default_write_options (c function)": [[8, "c.spral_rb_default_write_options", false]], "spral_rb_read (c function)": [[8, "c.spral_rb_read", false]], "spral_rb_read_ptr32 (c function)": [[8, "c.spral_rb_read_ptr32", false]], "spral_rb_write (c function)": [[8, "c.spral_rb_write", false]], "spral_rb_write_ptr32 (c function)": [[8, "c.spral_rb_write_ptr32", false]], "spral_scaling_auction_default_options (c function)": [[9, "c.spral_scaling_auction_default_options", false]], "spral_scaling_auction_sym (c function)": [[9, "c.spral_scaling_auction_sym", false]], "spral_scaling_auction_sym_long (c function)": [[9, "c.spral_scaling_auction_sym_long", false]], "spral_scaling_auction_unsym (c function)": [[9, "c.spral_scaling_auction_unsym", false]], "spral_scaling_auction_unsym_long (c function)": [[9, "c.spral_scaling_auction_unsym_long", false]], "spral_scaling_equilib_default_options (c function)": [[9, "c.spral_scaling_equilib_default_options", false]], "spral_scaling_equilib_sym (c function)": [[9, "c.spral_scaling_equilib_sym", false]], "spral_scaling_equilib_sym_long (c function)": [[9, "c.spral_scaling_equilib_sym_long", false]], "spral_scaling_equilib_unsym (c function)": [[9, "c.spral_scaling_equilib_unsym", false]], "spral_scaling_equilib_unsym_long (c function)": [[9, "c.spral_scaling_equilib_unsym_long", false]], "spral_scaling_hungarian_default_options (c function)": [[9, "c.spral_scaling_hungarian_default_options", false]], "spral_scaling_hungarian_sym (c function)": [[9, "c.spral_scaling_hungarian_sym", false]], "spral_scaling_hungarian_sym_long (c function)": [[9, "c.spral_scaling_hungarian_sym_long", false]], "spral_scaling_hungarian_unsym (c function)": [[9, "c.spral_scaling_hungarian_unsym", false]], "spral_scaling_hungarian_unsym_long (c function)": [[9, "c.spral_scaling_hungarian_unsym_long", false]], "spral_ssids_alter (c function)": [[10, "c.spral_ssids_alter", false]], "spral_ssids_analyse (c function)": [[10, "c.spral_ssids_analyse", false]], "spral_ssids_analyse_coord (c function)": [[10, "c.spral_ssids_analyse_coord", false]], "spral_ssids_analyse_ptr32 (c function)": [[10, "c.spral_ssids_analyse_ptr32", false]], "spral_ssids_analyse_topology (c function)": [[10, "c.spral_ssids_analyse_topology", false]], "spral_ssids_default_options (c function)": [[10, "c.spral_ssids_default_options", false]], "spral_ssids_enquire_indef (c function)": [[10, "c.spral_ssids_enquire_indef", false]], "spral_ssids_enquire_posdef (c function)": [[10, "c.spral_ssids_enquire_posdef", false]], "spral_ssids_factor (c function)": [[10, "c.spral_ssids_factor", false]], "spral_ssids_free (c function)": [[10, "c.spral_ssids_free", false]], "spral_ssids_free_akeep (c function)": [[10, "c.spral_ssids_free_akeep", false]], "spral_ssids_free_fkeep (c function)": [[10, "c.spral_ssids_free_fkeep", false]], "spral_ssids_solve (c function)": [[10, "c.spral_ssids_solve", false]], "spral_ssids_solve1 (c function)": [[10, "c.spral_ssids_solve1", false]], "spral_ssmfe_buckling_double (c function)": [[11, "c.spral_ssmfe_buckling_double", false]], "spral_ssmfe_buckling_double_complex (c function)": [[11, "c.spral_ssmfe_buckling_double_complex", false]], "spral_ssmfe_core_default_options (c function)": [[12, "c.spral_ssmfe_core_default_options", false]], "spral_ssmfe_core_free (c function)": [[12, "c.spral_ssmfe_core_free", false]], "spral_ssmfe_default_options (c function)": [[11, "c.spral_ssmfe_default_options", false], [13, "c.spral_ssmfe_default_options", false]], "spral_ssmfe_double (c function)": [[12, "c.spral_ssmfe_double", false]], "spral_ssmfe_double_complex (c function)": [[12, "c.spral_ssmfe_double_complex", false]], "spral_ssmfe_expert_buckling_double (c function)": [[13, "c.spral_ssmfe_expert_buckling_double", false]], "spral_ssmfe_expert_buckling_double_complex (c function)": [[13, "c.spral_ssmfe_expert_buckling_double_complex", false]], "spral_ssmfe_expert_free (c function)": [[13, "c.spral_ssmfe_expert_free", false]], "spral_ssmfe_expert_generalized_double (c function)": [[13, "c.spral_ssmfe_expert_generalized_double", false]], "spral_ssmfe_expert_generalized_double_complex (c function)": [[13, "c.spral_ssmfe_expert_generalized_double_complex", false]], "spral_ssmfe_expert_generalized_shift_double (c function)": [[13, "c.spral_ssmfe_expert_generalized_shift_double", false]], "spral_ssmfe_expert_generalized_shift_double_complex (c function)": [[13, "c.spral_ssmfe_expert_generalized_shift_double_complex", false]], "spral_ssmfe_expert_standard_double (c function)": [[13, "c.spral_ssmfe_expert_standard_double", false]], "spral_ssmfe_expert_standard_double_complex (c function)": [[13, "c.spral_ssmfe_expert_standard_double_complex", false]], "spral_ssmfe_expert_standard_shift_double (c function)": [[13, "c.spral_ssmfe_expert_standard_shift_double", false]], "spral_ssmfe_expert_standard_shift_double_complex (c function)": [[13, "c.spral_ssmfe_expert_standard_shift_double_complex", false]], "spral_ssmfe_free_double (c function)": [[11, "c.spral_ssmfe_free_double", false]], "spral_ssmfe_free_double_complex (c function)": [[11, "c.spral_ssmfe_free_double_complex", false]], "spral_ssmfe_generalized_double (c function)": [[11, "c.spral_ssmfe_generalized_double", false]], "spral_ssmfe_generalized_double_complex (c function)": [[11, "c.spral_ssmfe_generalized_double_complex", false]], "spral_ssmfe_generalized_shift_double (c function)": [[11, "c.spral_ssmfe_generalized_shift_double", false]], "spral_ssmfe_generalized_shift_double_complex (c function)": [[11, "c.spral_ssmfe_generalized_shift_double_complex", false]], "spral_ssmfe_inform (c type)": [[11, "c.spral_ssmfe_inform", false]], "spral_ssmfe_inform.flag (c member)": [[11, "c.spral_ssmfe_inform.flag", false]], "spral_ssmfe_inform.iteration (c member)": [[11, "c.spral_ssmfe_inform.iteration", false]], "spral_ssmfe_inform.left (c member)": [[11, "c.spral_ssmfe_inform.left", false]], "spral_ssmfe_inform.next_left (c member)": [[11, "c.spral_ssmfe_inform.next_left", false]], "spral_ssmfe_inform.next_right (c member)": [[11, "c.spral_ssmfe_inform.next_right", false]], "spral_ssmfe_inform.non_converged (c member)": [[11, "c.spral_ssmfe_inform.non_converged", false]], "spral_ssmfe_inform.right (c member)": [[11, "c.spral_ssmfe_inform.right", false]], "spral_ssmfe_inform.stat (c member)": [[11, "c.spral_ssmfe_inform.stat", false]], "spral_ssmfe_largest_double (c function)": [[12, "c.spral_ssmfe_largest_double", false]], "spral_ssmfe_largest_double_complex (c function)": [[12, "c.spral_ssmfe_largest_double_complex", false]], "spral_ssmfe_standard_double (c function)": [[11, "c.spral_ssmfe_standard_double", false]], "spral_ssmfe_standard_double_complex (c function)": [[11, "c.spral_ssmfe_standard_double_complex", false]], "spral_ssmfe_standard_shift_double (c function)": [[11, "c.spral_ssmfe_standard_shift_double", false]], "spral_ssmfe_standard_shift_double_complex (c function)": [[11, "c.spral_ssmfe_standard_shift_double_complex", false]], "stat (c member)": [[9, "c.stat", false]]}, "objects": {"": [[9, 0, 1, "c.flag", "flag"], [4, 1, 1, "c.lsmr_free", "lsmr_free"], [9, 0, 1, "c.matched", "matched"], [8, 1, 1, "c.rb_peek", "rb_peek"], [8, 3, 1, "c.rb_read_options", "rb_read_options"], [4, 1, 1, "c.spral_lsmr_default_options", "spral_lsmr_default_options"], [4, 1, 1, "c.spral_lsmr_solve", "spral_lsmr_solve"], [6, 1, 1, "c.spral_random_integer", "spral_random_integer"], [6, 1, 1, "c.spral_random_logical", "spral_random_logical"], [6, 1, 1, "c.spral_random_long", "spral_random_long"], [7, 1, 1, "c.spral_random_matrix_generate", "spral_random_matrix_generate"], [7, 1, 1, "c.spral_random_matrix_generate_long", "spral_random_matrix_generate_long"], [6, 1, 1, "c.spral_random_real", "spral_random_real"], [8, 1, 1, "c.spral_rb_default_read_options", "spral_rb_default_read_options"], [8, 1, 1, "c.spral_rb_default_write_options", "spral_rb_default_write_options"], [8, 1, 1, "c.spral_rb_read", "spral_rb_read"], [8, 1, 1, "c.spral_rb_read_ptr32", "spral_rb_read_ptr32"], [8, 1, 1, "c.spral_rb_write", "spral_rb_write"], [8, 1, 1, "c.spral_rb_write_ptr32", "spral_rb_write_ptr32"], [9, 1, 1, "c.spral_scaling_auction_default_options", "spral_scaling_auction_default_options"], [9, 1, 1, "c.spral_scaling_auction_sym", "spral_scaling_auction_sym"], [9, 1, 1, "c.spral_scaling_auction_sym_long", "spral_scaling_auction_sym_long"], [9, 1, 1, "c.spral_scaling_auction_unsym", "spral_scaling_auction_unsym"], [9, 1, 1, "c.spral_scaling_auction_unsym_long", "spral_scaling_auction_unsym_long"], [9, 1, 1, "c.spral_scaling_equilib_default_options", "spral_scaling_equilib_default_options"], [9, 1, 1, "c.spral_scaling_equilib_sym", "spral_scaling_equilib_sym"], [9, 1, 1, "c.spral_scaling_equilib_sym_long", "spral_scaling_equilib_sym_long"], [9, 1, 1, "c.spral_scaling_equilib_unsym", "spral_scaling_equilib_unsym"], [9, 1, 1, "c.spral_scaling_equilib_unsym_long", "spral_scaling_equilib_unsym_long"], [9, 1, 1, "c.spral_scaling_hungarian_default_options", "spral_scaling_hungarian_default_options"], [9, 1, 1, "c.spral_scaling_hungarian_sym", "spral_scaling_hungarian_sym"], [9, 1, 1, "c.spral_scaling_hungarian_sym_long", "spral_scaling_hungarian_sym_long"], [9, 1, 1, "c.spral_scaling_hungarian_unsym", "spral_scaling_hungarian_unsym"], [9, 1, 1, "c.spral_scaling_hungarian_unsym_long", "spral_scaling_hungarian_unsym_long"], [10, 1, 1, "c.spral_ssids_alter", "spral_ssids_alter"], [10, 1, 1, "c.spral_ssids_analyse", "spral_ssids_analyse"], [10, 1, 1, "c.spral_ssids_analyse_coord", "spral_ssids_analyse_coord"], [10, 1, 1, "c.spral_ssids_analyse_ptr32", "spral_ssids_analyse_ptr32"], [10, 1, 1, "c.spral_ssids_analyse_topology", "spral_ssids_analyse_topology"], [10, 1, 1, "c.spral_ssids_default_options", "spral_ssids_default_options"], [10, 1, 1, "c.spral_ssids_enquire_indef", "spral_ssids_enquire_indef"], [10, 1, 1, "c.spral_ssids_enquire_posdef", "spral_ssids_enquire_posdef"], [10, 1, 1, "c.spral_ssids_factor", "spral_ssids_factor"], [10, 1, 1, "c.spral_ssids_free", "spral_ssids_free"], [10, 1, 1, "c.spral_ssids_free_akeep", "spral_ssids_free_akeep"], [10, 1, 1, "c.spral_ssids_free_fkeep", "spral_ssids_free_fkeep"], [10, 1, 1, "c.spral_ssids_solve", "spral_ssids_solve"], [10, 1, 1, "c.spral_ssids_solve1", "spral_ssids_solve1"], [11, 1, 1, "c.spral_ssmfe_buckling_double", "spral_ssmfe_buckling_double"], [11, 1, 1, "c.spral_ssmfe_buckling_double_complex", "spral_ssmfe_buckling_double_complex"], [12, 1, 1, "c.spral_ssmfe_core_default_options", "spral_ssmfe_core_default_options"], [12, 1, 1, "c.spral_ssmfe_core_free", "spral_ssmfe_core_free"], [11, 1, 1, "c.spral_ssmfe_default_options", "spral_ssmfe_default_options"], [12, 1, 1, "c.spral_ssmfe_double", "spral_ssmfe_double"], [12, 1, 1, "c.spral_ssmfe_double_complex", "spral_ssmfe_double_complex"], [13, 1, 1, "c.spral_ssmfe_expert_buckling_double", "spral_ssmfe_expert_buckling_double"], [13, 1, 1, "c.spral_ssmfe_expert_buckling_double_complex", "spral_ssmfe_expert_buckling_double_complex"], [13, 1, 1, "c.spral_ssmfe_expert_free", "spral_ssmfe_expert_free"], [13, 1, 1, "c.spral_ssmfe_expert_generalized_double", "spral_ssmfe_expert_generalized_double"], [13, 1, 1, "c.spral_ssmfe_expert_generalized_double_complex", "spral_ssmfe_expert_generalized_double_complex"], [13, 1, 1, "c.spral_ssmfe_expert_generalized_shift_double", "spral_ssmfe_expert_generalized_shift_double"], [13, 1, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "spral_ssmfe_expert_generalized_shift_double_complex"], [13, 1, 1, "c.spral_ssmfe_expert_standard_double", "spral_ssmfe_expert_standard_double"], [13, 1, 1, "c.spral_ssmfe_expert_standard_double_complex", "spral_ssmfe_expert_standard_double_complex"], [13, 1, 1, "c.spral_ssmfe_expert_standard_shift_double", "spral_ssmfe_expert_standard_shift_double"], [13, 1, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "spral_ssmfe_expert_standard_shift_double_complex"], [11, 1, 1, "c.spral_ssmfe_free_double", "spral_ssmfe_free_double"], [11, 1, 1, "c.spral_ssmfe_free_double_complex", "spral_ssmfe_free_double_complex"], [11, 1, 1, "c.spral_ssmfe_generalized_double", "spral_ssmfe_generalized_double"], [11, 1, 1, "c.spral_ssmfe_generalized_double_complex", "spral_ssmfe_generalized_double_complex"], [11, 1, 1, "c.spral_ssmfe_generalized_shift_double", "spral_ssmfe_generalized_shift_double"], [11, 1, 1, "c.spral_ssmfe_generalized_shift_double_complex", "spral_ssmfe_generalized_shift_double_complex"], [11, 3, 1, "c.spral_ssmfe_inform", "spral_ssmfe_inform"], [12, 1, 1, "c.spral_ssmfe_largest_double", "spral_ssmfe_largest_double"], [12, 1, 1, "c.spral_ssmfe_largest_double_complex", "spral_ssmfe_largest_double_complex"], [11, 1, 1, "c.spral_ssmfe_standard_double", "spral_ssmfe_standard_double"], [11, 1, 1, "c.spral_ssmfe_standard_double_complex", "spral_ssmfe_standard_double_complex"], [11, 1, 1, "c.spral_ssmfe_standard_shift_double", "spral_ssmfe_standard_shift_double"], [11, 1, 1, "c.spral_ssmfe_standard_shift_double_complex", "spral_ssmfe_standard_shift_double_complex"], [9, 0, 1, "c.stat", "stat"], [9, 4, 1, "", "f/_/hungarian_inform"]], "PhonyNameDueToError": [[13, 0, 1, "c.PhonyNameDueToError.abs_tol_lambda", "abs_tol_lambda"], [11, 0, 1, "c.PhonyNameDueToError.abs_tol_residual", "abs_tol_residual"], [10, 0, 1, "c.PhonyNameDueToError.action", "action"], [13, 0, 1, "c.PhonyNameDueToError.alpha", "alpha"], [9, 0, 1, "c.PhonyNameDueToError.array_base", "array_base"], [4, 0, 1, "c.PhonyNameDueToError.atol", "atol"], [13, 0, 1, "c.PhonyNameDueToError.beta", "beta"], [4, 0, 1, "c.PhonyNameDueToError.btol", "btol"], [12, 0, 1, "c.PhonyNameDueToError.cf_max", "cf_max"], [4, 0, 1, "c.PhonyNameDueToError.condAP", "condAP"], [4, 0, 1, "c.PhonyNameDueToError.conlim", "conlim"], [12, 0, 1, "c.PhonyNameDueToError.converged", "converged"], [10, 0, 1, "c.PhonyNameDueToError.cpu_block_size", "cpu_block_size"], [10, 0, 1, "c.PhonyNameDueToError.cpu_flops", "cpu_flops"], [4, 0, 1, "c.PhonyNameDueToError.ctest", "ctest"], [10, 0, 1, "c.PhonyNameDueToError.cublas_error", "cublas_error"], [10, 0, 1, "c.PhonyNameDueToError.cuda_error", "cuda_error"], [9, 0, 1, "c.PhonyNameDueToError.eps_initial", "eps_initial"], [12, 0, 1, "c.PhonyNameDueToError.err_est", "err_est"], [12, 0, 1, "c.PhonyNameDueToError.err_lambda", "err_lambda"], [12, 0, 1, "c.PhonyNameDueToError.err_x", "err_x"], [12, 0, 1, "c.PhonyNameDueToError.extra_left", "extra_left"], [12, 0, 1, "c.PhonyNameDueToError.extra_right", "extra_right"], [4, 0, 1, "c.PhonyNameDueToError.flag", "flag"], [10, 0, 1, "c.PhonyNameDueToError.gpu_flops", "gpu_flops"], [10, 0, 1, "c.PhonyNameDueToError.gpu_perf_coeff", "gpu_perf_coeff"], [10, 0, 1, "c.PhonyNameDueToError.gpus", "gpus"], [13, 0, 1, "c.PhonyNameDueToError.i", "i"], [12, 0, 1, "c.PhonyNameDueToError.iteration", "iteration"], [9, 0, 1, "c.PhonyNameDueToError.iterations", "iterations"], [4, 0, 1, "c.PhonyNameDueToError.itn", "itn"], [4, 0, 1, "c.PhonyNameDueToError.itn_test", "itn_test"], [4, 0, 1, "c.PhonyNameDueToError.itnlim", "itnlim"], [13, 0, 1, "c.PhonyNameDueToError.j", "j"], [11, 0, 1, "c.PhonyNameDueToError.job", "job"], [13, 0, 1, "c.PhonyNameDueToError.jx", "jx"], [13, 0, 1, "c.PhonyNameDueToError.jy", "jy"], [13, 0, 1, "c.PhonyNameDueToError.k", "k"], [13, 0, 1, "c.PhonyNameDueToError.kx", "kx"], [13, 0, 1, "c.PhonyNameDueToError.ky", "ky"], [13, 0, 1, "c.PhonyNameDueToError.left", "left"], [11, 0, 1, "c.PhonyNameDueToError.left_gap", "left_gap"], [4, 0, 1, "c.PhonyNameDueToError.localSize", "localSize"], [9, 0, 1, "c.PhonyNameDueToError.matched", "matched"], [10, 0, 1, "c.PhonyNameDueToError.matrix_dup", "matrix_dup"], [10, 0, 1, "c.PhonyNameDueToError.matrix_missing_diag", "matrix_missing_diag"], [10, 0, 1, "c.PhonyNameDueToError.matrix_outrange", "matrix_outrange"], [10, 0, 1, "c.PhonyNameDueToError.matrix_rank", "matrix_rank"], [9, 0, 1, "c.PhonyNameDueToError.max_iterations", "max_iterations"], [11, 0, 1, "c.PhonyNameDueToError.max_left", "max_left"], [11, 0, 1, "c.PhonyNameDueToError.max_right", "max_right"], [9, 0, 1, "c.PhonyNameDueToError.max_unchanged", "max_unchanged"], [10, 0, 1, "c.PhonyNameDueToError.maxdepth", "maxdepth"], [10, 0, 1, "c.PhonyNameDueToError.maxfront", "maxfront"], [10, 0, 1, "c.PhonyNameDueToError.maxsupernode", "maxsupernode"], [12, 0, 1, "c.PhonyNameDueToError.minAprod", "minAprod"], [12, 0, 1, "c.PhonyNameDueToError.minBprod", "minBprod"], [12, 0, 1, "c.PhonyNameDueToError.min_gap", "min_gap"], [9, 0, 1, "c.PhonyNameDueToError.min_proportion", "min_proportion"], [10, 0, 1, "c.PhonyNameDueToError.nemin", "nemin"], [13, 0, 1, "c.PhonyNameDueToError.next_left", "next_left"], [13, 0, 1, "c.PhonyNameDueToError.next_right", "next_right"], [10, 0, 1, "c.PhonyNameDueToError.ngpu", "ngpu"], [13, 0, 1, "c.PhonyNameDueToError.non_converged", "non_converged"], [4, 0, 1, "c.PhonyNameDueToError.normAP", "normAP"], [4, 0, 1, "c.PhonyNameDueToError.normr", "normr"], [4, 0, 1, "c.PhonyNameDueToError.normy", "normy"], [10, 0, 1, "c.PhonyNameDueToError.nproc", "nproc"], [10, 0, 1, "c.PhonyNameDueToError.num_delay", "num_delay"], [10, 0, 1, "c.PhonyNameDueToError.num_factor", "num_factor"], [10, 0, 1, "c.PhonyNameDueToError.num_flops", "num_flops"], [10, 0, 1, "c.PhonyNameDueToError.num_neg", "num_neg"], [10, 0, 1, "c.PhonyNameDueToError.num_sup", "num_sup"], [10, 0, 1, "c.PhonyNameDueToError.num_two", "num_two"], [11, 0, 1, "c.PhonyNameDueToError.nx", "nx"], [13, 0, 1, "c.PhonyNameDueToError.ny", "ny"], [10, 0, 1, "c.PhonyNameDueToError.ordering", "ordering"], [10, 0, 1, "c.PhonyNameDueToError.pivot_method", "pivot_method"], [4, 0, 1, "c.PhonyNameDueToError.print_freq_head", "print_freq_head"], [4, 0, 1, "c.PhonyNameDueToError.print_freq_itn", "print_freq_itn"], [10, 0, 1, "c.PhonyNameDueToError.print_level", "print_level"], [11, 0, 1, "c.PhonyNameDueToError.rel_tol_lambda", "rel_tol_lambda"], [11, 0, 1, "c.PhonyNameDueToError.rel_tol_residual", "rel_tol_residual"], [12, 0, 1, "c.PhonyNameDueToError.residual_norms", "residual_norms"], [13, 0, 1, "c.PhonyNameDueToError.right", "right"], [11, 0, 1, "c.PhonyNameDueToError.right_gap", "right_gap"], [9, 0, 1, "c.PhonyNameDueToError.scale_if_singular", "scale_if_singular"], [10, 0, 1, "c.PhonyNameDueToError.scaling", "scaling"], [10, 0, 1, "c.PhonyNameDueToError.small", "small"], [10, 0, 1, "c.PhonyNameDueToError.small_subtree_threshold", "small_subtree_threshold"], [4, 0, 1, "c.PhonyNameDueToError.stat", "stat"], [9, 0, 1, "c.PhonyNameDueToError.tol", "tol"], [11, 0, 1, "c.PhonyNameDueToError.tol_x", "tol_x"], [10, 0, 1, "c.PhonyNameDueToError.u", "u"], [11, 0, 1, "c.PhonyNameDueToError.unit_diagnostic", "unit_diagnostic"], [4, 0, 1, "c.PhonyNameDueToError.unit_diagnostics", "unit_diagnostics"], [4, 0, 1, "c.PhonyNameDueToError.unit_error", "unit_error"], [10, 0, 1, "c.PhonyNameDueToError.unit_warning", "unit_warning"], [9, 0, 1, "c.PhonyNameDueToError.unmatchable", "unmatchable"], [11, 0, 1, "c.PhonyNameDueToError.user_x", "user_x"], [8, 0, 1, "c.PhonyNameDueToError.val_format", "val_format"], [11, 0, 1, "c.PhonyNameDueToError.x", "x"], [11, 0, 1, "c.PhonyNameDueToError.y", "y"]], "lsmr_free": [[4, 2, 1, "c.lsmr_free", "keep"]], "rb_peek": [[8, 2, 1, "c.rb_peek", "filename"], [8, 2, 1, "c.rb_peek", "identifier"], [8, 2, 1, "c.rb_peek", "m"], [8, 2, 1, "c.rb_peek", "matrix_type"], [8, 2, 1, "c.rb_peek", "n"], [8, 2, 1, "c.rb_peek", "nelt"], [8, 2, 1, "c.rb_peek", "nval"], [8, 2, 1, "c.rb_peek", "nvar"], [8, 2, 1, "c.rb_peek", "title"], [8, 2, 1, "c.rb_peek", "type_code"]], "rb_read_options": [[8, 0, 1, "c.rb_read_options.add_diagonal", "add_diagonal"], [8, 0, 1, "c.rb_read_options.extra_space", "extra_space"], [8, 0, 1, "c.rb_read_options.lwr_upr_full", "lwr_upr_full"], [8, 0, 1, "c.rb_read_options.values", "values"]], "spral_lsmr_default_options": [[4, 2, 1, "c.spral_lsmr_default_options", "options"]], "spral_lsmr_solve": [[4, 2, 1, "c.spral_lsmr_solve", "action"], [4, 2, 1, "c.spral_lsmr_solve", "damp"], [4, 2, 1, "c.spral_lsmr_solve", "inform"], [4, 2, 1, "c.spral_lsmr_solve", "keep"], [4, 2, 1, "c.spral_lsmr_solve", "m"], [4, 2, 1, "c.spral_lsmr_solve", "n"], [4, 2, 1, "c.spral_lsmr_solve", "options"], [4, 2, 1, "c.spral_lsmr_solve", "u"], [4, 2, 1, "c.spral_lsmr_solve", "v"], [4, 2, 1, "c.spral_lsmr_solve", "y"]], "spral_random_integer": [[6, 2, 1, "c.spral_random_integer", "n"], [6, 2, 1, "c.spral_random_integer", "state"]], "spral_random_logical": [[6, 2, 1, "c.spral_random_logical", "state"]], "spral_random_long": [[6, 2, 1, "c.spral_random_long", "n"], [6, 2, 1, "c.spral_random_long", "state"]], "spral_random_matrix_generate": [[7, 2, 1, "c.spral_random_matrix_generate", "flags"], [7, 2, 1, "c.spral_random_matrix_generate", "m"], [7, 2, 1, "c.spral_random_matrix_generate", "matrix_type"], [7, 2, 1, "c.spral_random_matrix_generate", "n"], [7, 2, 1, "c.spral_random_matrix_generate", "nnz"], [7, 2, 1, "c.spral_random_matrix_generate", "ptr"], [7, 2, 1, "c.spral_random_matrix_generate", "row"], [7, 2, 1, "c.spral_random_matrix_generate", "state"], [7, 2, 1, "c.spral_random_matrix_generate", "val"]], "spral_random_matrix_generate_long": [[7, 2, 1, "c.spral_random_matrix_generate_long", "flags"], [7, 2, 1, "c.spral_random_matrix_generate_long", "m"], [7, 2, 1, "c.spral_random_matrix_generate_long", "matrix_type"], [7, 2, 1, "c.spral_random_matrix_generate_long", "n"], [7, 2, 1, "c.spral_random_matrix_generate_long", "nnz"], [7, 2, 1, "c.spral_random_matrix_generate_long", "ptr"], [7, 2, 1, "c.spral_random_matrix_generate_long", "row"], [7, 2, 1, "c.spral_random_matrix_generate_long", "state"], [7, 2, 1, "c.spral_random_matrix_generate_long", "val"]], "spral_random_real": [[6, 2, 1, "c.spral_random_real", "positive"], [6, 2, 1, "c.spral_random_real", "state"]], "spral_rb_default_read_options": [[8, 2, 1, "c.spral_rb_default_read_options", "options"]], "spral_rb_default_write_options": [[8, 2, 1, "c.spral_rb_default_write_options", "options"]], "spral_rb_read": [[8, 2, 1, "c.spral_rb_read", "filename"], [8, 2, 1, "c.spral_rb_read", "handle"], [8, 2, 1, "c.spral_rb_read", "identifier"], [8, 2, 1, "c.spral_rb_read", "m"], [8, 2, 1, "c.spral_rb_read", "matrix_type"], [8, 2, 1, "c.spral_rb_read", "n"], [8, 2, 1, "c.spral_rb_read", "options"], [8, 2, 1, "c.spral_rb_read", "ptr"], [8, 2, 1, "c.spral_rb_read", "row"], [8, 2, 1, "c.spral_rb_read", "state"], [8, 2, 1, "c.spral_rb_read", "title"], [8, 2, 1, "c.spral_rb_read", "val"]], "spral_rb_read_ptr32": [[8, 2, 1, "c.spral_rb_read_ptr32", "filename"], [8, 2, 1, "c.spral_rb_read_ptr32", "handle"], [8, 2, 1, "c.spral_rb_read_ptr32", "identifier"], [8, 2, 1, "c.spral_rb_read_ptr32", "m"], [8, 2, 1, "c.spral_rb_read_ptr32", "matrix_type"], [8, 2, 1, "c.spral_rb_read_ptr32", "n"], [8, 2, 1, "c.spral_rb_read_ptr32", "options"], [8, 2, 1, "c.spral_rb_read_ptr32", "ptr"], [8, 2, 1, "c.spral_rb_read_ptr32", "row"], [8, 2, 1, "c.spral_rb_read_ptr32", "state"], [8, 2, 1, "c.spral_rb_read_ptr32", "title"], [8, 2, 1, "c.spral_rb_read_ptr32", "val"]], "spral_rb_write": [[8, 2, 1, "c.spral_rb_write", "filename"], [8, 2, 1, "c.spral_rb_write", "identifier"], [8, 2, 1, "c.spral_rb_write", "m"], [8, 2, 1, "c.spral_rb_write", "matrix_type"], [8, 2, 1, "c.spral_rb_write", "n"], [8, 2, 1, "c.spral_rb_write", "options"], [8, 2, 1, "c.spral_rb_write", "ptr"], [8, 2, 1, "c.spral_rb_write", "row"], [8, 2, 1, "c.spral_rb_write", "title"], [8, 2, 1, "c.spral_rb_write", "val"]], "spral_rb_write_ptr32": [[8, 2, 1, "c.spral_rb_write_ptr32", "filename"], [8, 2, 1, "c.spral_rb_write_ptr32", "identifier"], [8, 2, 1, "c.spral_rb_write_ptr32", "m"], [8, 2, 1, "c.spral_rb_write_ptr32", "matrix_type"], [8, 2, 1, "c.spral_rb_write_ptr32", "n"], [8, 2, 1, "c.spral_rb_write_ptr32", "options"], [8, 2, 1, "c.spral_rb_write_ptr32", "ptr"], [8, 2, 1, "c.spral_rb_write_ptr32", "row"], [8, 2, 1, "c.spral_rb_write_ptr32", "title"], [8, 2, 1, "c.spral_rb_write_ptr32", "val"]], "spral_scaling_auction_default_options": [[9, 2, 1, "c.spral_scaling_auction_default_options", "options"]], "spral_scaling_auction_sym": [[9, 2, 1, "c.spral_scaling_auction_sym", "inform"], [9, 2, 1, "c.spral_scaling_auction_sym", "match"], [9, 2, 1, "c.spral_scaling_auction_sym", "n"], [9, 2, 1, "c.spral_scaling_auction_sym", "options"], [9, 2, 1, "c.spral_scaling_auction_sym", "ptr"], [9, 2, 1, "c.spral_scaling_auction_sym", "row"], [9, 2, 1, "c.spral_scaling_auction_sym", "scaling"], [9, 2, 1, "c.spral_scaling_auction_sym", "val"]], "spral_scaling_auction_sym_long": [[9, 2, 1, "c.spral_scaling_auction_sym_long", "inform"], [9, 2, 1, "c.spral_scaling_auction_sym_long", "match"], [9, 2, 1, "c.spral_scaling_auction_sym_long", "n"], [9, 2, 1, "c.spral_scaling_auction_sym_long", "options"], [9, 2, 1, "c.spral_scaling_auction_sym_long", "ptr"], [9, 2, 1, "c.spral_scaling_auction_sym_long", "row"], [9, 2, 1, "c.spral_scaling_auction_sym_long", "scaling"], [9, 2, 1, "c.spral_scaling_auction_sym_long", "val"]], "spral_scaling_auction_unsym": [[9, 2, 1, "c.spral_scaling_auction_unsym", "cscaling"], [9, 2, 1, "c.spral_scaling_auction_unsym", "inform"], [9, 2, 1, "c.spral_scaling_auction_unsym", "m"], [9, 2, 1, "c.spral_scaling_auction_unsym", "match"], [9, 2, 1, "c.spral_scaling_auction_unsym", "n"], [9, 2, 1, "c.spral_scaling_auction_unsym", "options"], [9, 2, 1, "c.spral_scaling_auction_unsym", "ptr"], [9, 2, 1, "c.spral_scaling_auction_unsym", "row"], [9, 2, 1, "c.spral_scaling_auction_unsym", "rscaling"], [9, 2, 1, "c.spral_scaling_auction_unsym", "val"]], "spral_scaling_auction_unsym_long": [[9, 2, 1, "c.spral_scaling_auction_unsym_long", "cscaling"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "inform"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "m"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "match"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "n"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "options"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "ptr"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "row"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "rscaling"], [9, 2, 1, "c.spral_scaling_auction_unsym_long", "val"]], "spral_scaling_equilib_default_options": [[9, 2, 1, "c.spral_scaling_equilib_default_options", "options"]], "spral_scaling_equilib_sym": [[9, 2, 1, "c.spral_scaling_equilib_sym", "inform"], [9, 2, 1, "c.spral_scaling_equilib_sym", "n"], [9, 2, 1, "c.spral_scaling_equilib_sym", "options"], [9, 2, 1, "c.spral_scaling_equilib_sym", "ptr"], [9, 2, 1, "c.spral_scaling_equilib_sym", "row"], [9, 2, 1, "c.spral_scaling_equilib_sym", "scaling"], [9, 2, 1, "c.spral_scaling_equilib_sym", "val"]], "spral_scaling_equilib_sym_long": [[9, 2, 1, "c.spral_scaling_equilib_sym_long", "inform"], [9, 2, 1, "c.spral_scaling_equilib_sym_long", "n"], [9, 2, 1, "c.spral_scaling_equilib_sym_long", "options"], [9, 2, 1, "c.spral_scaling_equilib_sym_long", "ptr"], [9, 2, 1, "c.spral_scaling_equilib_sym_long", "row"], [9, 2, 1, "c.spral_scaling_equilib_sym_long", "scaling"], [9, 2, 1, "c.spral_scaling_equilib_sym_long", "val"]], "spral_scaling_equilib_unsym": [[9, 2, 1, "c.spral_scaling_equilib_unsym", "cscaling"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "inform"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "m"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "n"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "options"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "ptr"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "row"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "rscaling"], [9, 2, 1, "c.spral_scaling_equilib_unsym", "val"]], "spral_scaling_equilib_unsym_long": [[9, 2, 1, "c.spral_scaling_equilib_unsym_long", "cscaling"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "inform"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "m"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "n"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "options"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "ptr"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "row"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "rscaling"], [9, 2, 1, "c.spral_scaling_equilib_unsym_long", "val"]], "spral_scaling_hungarian_default_options": [[9, 2, 1, "c.spral_scaling_hungarian_default_options", "options"]], "spral_scaling_hungarian_sym": [[9, 2, 1, "c.spral_scaling_hungarian_sym", "inform"], [9, 2, 1, "c.spral_scaling_hungarian_sym", "match"], [9, 2, 1, "c.spral_scaling_hungarian_sym", "n"], [9, 2, 1, "c.spral_scaling_hungarian_sym", "options"], [9, 2, 1, "c.spral_scaling_hungarian_sym", "ptr"], [9, 2, 1, "c.spral_scaling_hungarian_sym", "row"], [9, 2, 1, "c.spral_scaling_hungarian_sym", "scaling"], [9, 2, 1, "c.spral_scaling_hungarian_sym", "val"]], "spral_scaling_hungarian_sym_long": [[9, 2, 1, "c.spral_scaling_hungarian_sym_long", "inform"], [9, 2, 1, "c.spral_scaling_hungarian_sym_long", "match"], [9, 2, 1, "c.spral_scaling_hungarian_sym_long", "n"], [9, 2, 1, "c.spral_scaling_hungarian_sym_long", "options"], [9, 2, 1, "c.spral_scaling_hungarian_sym_long", "ptr"], [9, 2, 1, "c.spral_scaling_hungarian_sym_long", "row"], [9, 2, 1, "c.spral_scaling_hungarian_sym_long", "scaling"], [9, 2, 1, "c.spral_scaling_hungarian_sym_long", "val"]], "spral_scaling_hungarian_unsym": [[9, 2, 1, "c.spral_scaling_hungarian_unsym", "cscaling"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "inform"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "m"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "match"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "n"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "options"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "ptr"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "row"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "rscaling"], [9, 2, 1, "c.spral_scaling_hungarian_unsym", "val"]], "spral_scaling_hungarian_unsym_long": [[9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "cscaling"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "inform"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "m"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "match"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "n"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "options"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "ptr"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "row"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "rscaling"], [9, 2, 1, "c.spral_scaling_hungarian_unsym_long", "val"]], "spral_ssids_alter": [[10, 2, 1, "c.spral_ssids_alter", "akeep"], [10, 2, 1, "c.spral_ssids_alter", "d"], [10, 2, 1, "c.spral_ssids_alter", "fkeep"], [10, 2, 1, "c.spral_ssids_alter", "inform"], [10, 2, 1, "c.spral_ssids_alter", "options"]], "spral_ssids_analyse": [[10, 2, 1, "c.spral_ssids_analyse", "akeep"], [10, 2, 1, "c.spral_ssids_analyse", "check"], [10, 2, 1, "c.spral_ssids_analyse", "inform"], [10, 2, 1, "c.spral_ssids_analyse", "n"], [10, 2, 1, "c.spral_ssids_analyse", "options"], [10, 2, 1, "c.spral_ssids_analyse", "order"], [10, 2, 1, "c.spral_ssids_analyse", "ptr"], [10, 2, 1, "c.spral_ssids_analyse", "row"], [10, 2, 1, "c.spral_ssids_analyse", "val"]], "spral_ssids_analyse_coord": [[10, 2, 1, "c.spral_ssids_analyse_coord", "akeep"], [10, 2, 1, "c.spral_ssids_analyse_coord", "col"], [10, 2, 1, "c.spral_ssids_analyse_coord", "inform"], [10, 2, 1, "c.spral_ssids_analyse_coord", "n"], [10, 2, 1, "c.spral_ssids_analyse_coord", "ne"], [10, 2, 1, "c.spral_ssids_analyse_coord", "options"], [10, 2, 1, "c.spral_ssids_analyse_coord", "order"], [10, 2, 1, "c.spral_ssids_analyse_coord", "row"], [10, 2, 1, "c.spral_ssids_analyse_coord", "val"]], "spral_ssids_analyse_ptr32": [[10, 2, 1, "c.spral_ssids_analyse_ptr32", "akeep"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "check"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "inform"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "n"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "options"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "order"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "ptr"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "row"], [10, 2, 1, "c.spral_ssids_analyse_ptr32", "val"]], "spral_ssids_analyse_topology": [[10, 2, 1, "c.spral_ssids_analyse_topology", "akeep"], [10, 2, 1, "c.spral_ssids_analyse_topology", "check"], [10, 2, 1, "c.spral_ssids_analyse_topology", "inform"], [10, 2, 1, "c.spral_ssids_analyse_topology", "n"], [10, 2, 1, "c.spral_ssids_analyse_topology", "nregions"], [10, 2, 1, "c.spral_ssids_analyse_topology", "options"], [10, 2, 1, "c.spral_ssids_analyse_topology", "order"], [10, 2, 1, "c.spral_ssids_analyse_topology", "ptr"], [10, 2, 1, "c.spral_ssids_analyse_topology", "regions"], [10, 2, 1, "c.spral_ssids_analyse_topology", "row"], [10, 2, 1, "c.spral_ssids_analyse_topology", "val"]], "spral_ssids_default_options": [[10, 2, 1, "c.spral_ssids_default_options", "options"]], "spral_ssids_enquire_indef": [[10, 2, 1, "c.spral_ssids_enquire_indef", "akeep"], [10, 2, 1, "c.spral_ssids_enquire_indef", "d"], [10, 2, 1, "c.spral_ssids_enquire_indef", "fkeep"], [10, 2, 1, "c.spral_ssids_enquire_indef", "inform"], [10, 2, 1, "c.spral_ssids_enquire_indef", "options"], [10, 2, 1, "c.spral_ssids_enquire_indef", "piv_order"]], "spral_ssids_enquire_posdef": [[10, 2, 1, "c.spral_ssids_enquire_posdef", "akeep"], [10, 2, 1, "c.spral_ssids_enquire_posdef", "d"], [10, 2, 1, "c.spral_ssids_enquire_posdef", "fkeep"], [10, 2, 1, "c.spral_ssids_enquire_posdef", "inform"], [10, 2, 1, "c.spral_ssids_enquire_posdef", "options"]], "spral_ssids_factor": [[10, 2, 1, "c.spral_ssids_factor", "akeep"], [10, 2, 1, "c.spral_ssids_factor", "fkeep"], [10, 2, 1, "c.spral_ssids_factor", "inform"], [10, 2, 1, "c.spral_ssids_factor", "options"], [10, 2, 1, "c.spral_ssids_factor", "posdef"], [10, 2, 1, "c.spral_ssids_factor", "ptr"], [10, 2, 1, "c.spral_ssids_factor", "row"], [10, 2, 1, "c.spral_ssids_factor", "scale"], [10, 2, 1, "c.spral_ssids_factor", "val"]], "spral_ssids_free": [[10, 2, 1, "c.spral_ssids_free", "akeep"], [10, 2, 1, "c.spral_ssids_free", "fkeep"]], "spral_ssids_free_akeep": [[10, 2, 1, "c.spral_ssids_free_akeep", "akeep"]], "spral_ssids_free_fkeep": [[10, 2, 1, "c.spral_ssids_free_fkeep", "fkeep"]], "spral_ssids_solve": [[10, 2, 1, "c.spral_ssids_solve", "akeep"], [10, 2, 1, "c.spral_ssids_solve", "fkeep"], [10, 2, 1, "c.spral_ssids_solve", "inform"], [10, 2, 1, "c.spral_ssids_solve", "job"], [10, 2, 1, "c.spral_ssids_solve", "ldx"], [10, 2, 1, "c.spral_ssids_solve", "nrhs"], [10, 2, 1, "c.spral_ssids_solve", "options"], [10, 2, 1, "c.spral_ssids_solve", "x"]], "spral_ssids_solve1": [[10, 2, 1, "c.spral_ssids_solve1", "akeep"], [10, 2, 1, "c.spral_ssids_solve1", "fkeep"], [10, 2, 1, "c.spral_ssids_solve1", "inform"], [10, 2, 1, "c.spral_ssids_solve1", "job"], [10, 2, 1, "c.spral_ssids_solve1", "options"], [10, 2, 1, "c.spral_ssids_solve1", "x1"]], "spral_ssmfe_buckling_double": [[11, 2, 1, "c.spral_ssmfe_buckling_double", "inform"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "keep"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "lambda"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "ldx"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "left"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "mep"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "n"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "options"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "rci"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "right"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "sigma"], [11, 2, 1, "c.spral_ssmfe_buckling_double", "x"]], "spral_ssmfe_buckling_double_complex": [[11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "inform"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "keep"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "lambda"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "ldx"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "left"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "mep"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "n"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "options"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "rci"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "right"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "sigma"], [11, 2, 1, "c.spral_ssmfe_buckling_double_complex", "x"]], "spral_ssmfe_core_default_options": [[12, 2, 1, "c.spral_ssmfe_core_default_options", "options"]], "spral_ssmfe_core_free": [[12, 2, 1, "c.spral_ssmfe_core_free", "inform"], [12, 2, 1, "c.spral_ssmfe_core_free", "keep"]], "spral_ssmfe_default_options": [[11, 2, 1, "c.spral_ssmfe_default_options", "options"]], "spral_ssmfe_double": [[12, 2, 1, "c.spral_ssmfe_double", "ind"], [12, 2, 1, "c.spral_ssmfe_double", "inform"], [12, 2, 1, "c.spral_ssmfe_double", "keep"], [12, 2, 1, "c.spral_ssmfe_double", "lambda"], [12, 2, 1, "c.spral_ssmfe_double", "left"], [12, 2, 1, "c.spral_ssmfe_double", "m"], [12, 2, 1, "c.spral_ssmfe_double", "options"], [12, 2, 1, "c.spral_ssmfe_double", "problem"], [12, 2, 1, "c.spral_ssmfe_double", "rci"], [12, 2, 1, "c.spral_ssmfe_double", "right"], [12, 2, 1, "c.spral_ssmfe_double", "rr"]], "spral_ssmfe_double_complex": [[12, 2, 1, "c.spral_ssmfe_double_complex", "ind"], [12, 2, 1, "c.spral_ssmfe_double_complex", "inform"], [12, 2, 1, "c.spral_ssmfe_double_complex", "keep"], [12, 2, 1, "c.spral_ssmfe_double_complex", "lambda"], [12, 2, 1, "c.spral_ssmfe_double_complex", "left"], [12, 2, 1, "c.spral_ssmfe_double_complex", "m"], [12, 2, 1, "c.spral_ssmfe_double_complex", "options"], [12, 2, 1, "c.spral_ssmfe_double_complex", "problem"], [12, 2, 1, "c.spral_ssmfe_double_complex", "rci"], [12, 2, 1, "c.spral_ssmfe_double_complex", "right"], [12, 2, 1, "c.spral_ssmfe_double_complex", "rr"]], "spral_ssmfe_expert_buckling_double": [[13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "left"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "m"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "options"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "right"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "rr"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double", "sigma"]], "spral_ssmfe_expert_buckling_double_complex": [[13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "left"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "m"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "options"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "right"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "rr"], [13, 2, 1, "c.spral_ssmfe_expert_buckling_double_complex", "sigma"]], "spral_ssmfe_expert_free": [[13, 2, 1, "c.spral_ssmfe_expert_free", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_free", "keep"]], "spral_ssmfe_expert_generalized_double": [[13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "left"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "m"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "options"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double", "rr"]], "spral_ssmfe_expert_generalized_double_complex": [[13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "left"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "m"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "options"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_double_complex", "rr"]], "spral_ssmfe_expert_generalized_shift_double": [[13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "left"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "m"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "options"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "right"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "rr"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double", "sigma"]], "spral_ssmfe_expert_generalized_shift_double_complex": [[13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "left"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "m"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "options"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "right"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "rr"], [13, 2, 1, "c.spral_ssmfe_expert_generalized_shift_double_complex", "sigma"]], "spral_ssmfe_expert_standard_double": [[13, 2, 1, "c.spral_ssmfe_expert_standard_double", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "left"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "m"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "options"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double", "rr"]], "spral_ssmfe_expert_standard_double_complex": [[13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "left"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "m"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "options"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_standard_double_complex", "rr"]], "spral_ssmfe_expert_standard_shift_double": [[13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "left"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "m"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "options"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "right"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "rr"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double", "sigma"]], "spral_ssmfe_expert_standard_shift_double_complex": [[13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "ind"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "inform"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "keep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "lambda"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "left"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "m"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "mep"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "options"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "rci"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "right"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "rr"], [13, 2, 1, "c.spral_ssmfe_expert_standard_shift_double_complex", "sigma"]], "spral_ssmfe_free_double": [[11, 2, 1, "c.spral_ssmfe_free_double", "inform"], [11, 2, 1, "c.spral_ssmfe_free_double", "keep"]], "spral_ssmfe_free_double_complex": [[11, 2, 1, "c.spral_ssmfe_free_double_complex", "inform"], [11, 2, 1, "c.spral_ssmfe_free_double_complex", "keep"]], "spral_ssmfe_generalized_double": [[11, 2, 1, "c.spral_ssmfe_generalized_double", "inform"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "keep"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "lambda"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "ldx"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "left"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "mep"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "n"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "options"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "rci"], [11, 2, 1, "c.spral_ssmfe_generalized_double", "x"]], "spral_ssmfe_generalized_double_complex": [[11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "inform"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "keep"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "lambda"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "ldx"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "left"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "mep"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "n"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "options"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "rci"], [11, 2, 1, "c.spral_ssmfe_generalized_double_complex", "x"]], "spral_ssmfe_generalized_shift_double": [[11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "inform"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "keep"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "lambda"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "ldx"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "left"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "mep"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "n"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "options"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "rci"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "right"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "sigma"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double", "x"]], "spral_ssmfe_generalized_shift_double_complex": [[11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "inform"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "keep"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "lambda"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "ldx"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "left"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "mep"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "n"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "options"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "rci"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "right"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "sigma"], [11, 2, 1, "c.spral_ssmfe_generalized_shift_double_complex", "x"]], "spral_ssmfe_inform": [[11, 0, 1, "c.spral_ssmfe_inform.flag", "flag"], [11, 0, 1, "c.spral_ssmfe_inform.iteration", "iteration"], [11, 0, 1, "c.spral_ssmfe_inform.left", "left"], [11, 0, 1, "c.spral_ssmfe_inform.next_left", "next_left"], [11, 0, 1, "c.spral_ssmfe_inform.next_right", "next_right"], [11, 0, 1, "c.spral_ssmfe_inform.non_converged", "non_converged"], [11, 0, 1, "c.spral_ssmfe_inform.right", "right"], [11, 0, 1, "c.spral_ssmfe_inform.stat", "stat"]], "spral_ssmfe_largest_double": [[12, 2, 1, "c.spral_ssmfe_largest_double", "ind"], [12, 2, 1, "c.spral_ssmfe_largest_double", "inform"], [12, 2, 1, "c.spral_ssmfe_largest_double", "keep"], [12, 2, 1, "c.spral_ssmfe_largest_double", "lambda"], [12, 2, 1, "c.spral_ssmfe_largest_double", "m"], [12, 2, 1, "c.spral_ssmfe_largest_double", "nep"], [12, 2, 1, "c.spral_ssmfe_largest_double", "options"], [12, 2, 1, "c.spral_ssmfe_largest_double", "problem"], [12, 2, 1, "c.spral_ssmfe_largest_double", "rci"], [12, 2, 1, "c.spral_ssmfe_largest_double", "rr"]], "spral_ssmfe_largest_double_complex": [[12, 2, 1, "c.spral_ssmfe_largest_double_complex", "ind"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "inform"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "keep"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "lambda"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "m"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "nep"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "options"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "problem"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "rci"], [12, 2, 1, "c.spral_ssmfe_largest_double_complex", "rr"]], "spral_ssmfe_standard_double": [[11, 2, 1, "c.spral_ssmfe_standard_double", "inform"], [11, 2, 1, "c.spral_ssmfe_standard_double", "keep"], [11, 2, 1, "c.spral_ssmfe_standard_double", "lambda"], [11, 2, 1, "c.spral_ssmfe_standard_double", "ldx"], [11, 2, 1, "c.spral_ssmfe_standard_double", "left"], [11, 2, 1, "c.spral_ssmfe_standard_double", "mep"], [11, 2, 1, "c.spral_ssmfe_standard_double", "n"], [11, 2, 1, "c.spral_ssmfe_standard_double", "options"], [11, 2, 1, "c.spral_ssmfe_standard_double", "rci"], [11, 2, 1, "c.spral_ssmfe_standard_double", "x"]], "spral_ssmfe_standard_double_complex": [[11, 2, 1, "c.spral_ssmfe_standard_double_complex", "inform"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "keep"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "lambda"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "ldx"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "left"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "mep"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "n"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "options"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "rci"], [11, 2, 1, "c.spral_ssmfe_standard_double_complex", "x"]], "spral_ssmfe_standard_shift_double": [[11, 2, 1, "c.spral_ssmfe_standard_shift_double", "inform"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "keep"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "lambda"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "ldx"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "left"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "mep"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "n"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "options"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "rci"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "right"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "sigma"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double", "x"]], "spral_ssmfe_standard_shift_double_complex": [[11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "inform"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "keep"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "lambda"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "ldx"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "left"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "mep"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "n"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "options"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "rci"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "right"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "sigma"], [11, 2, 1, "c.spral_ssmfe_standard_shift_double_complex", "x"]]}, "objnames": {"0": ["c", "member", "C member"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["c", "type", "C type"], "4": ["f", "type", "Fortran type"]}, "objtypes": {"0": "c:member", "1": "c:function", "2": "c:functionParam", "3": "c:type", "4": "f:type"}, "terms": {"": [4, 6, 8, 9, 10, 12, 13], "0": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "00": [8, 9, 10, 11], "0000000000e": 10, "00000005e": 10, "0000000e": 11, "000000e": 11, "0000e": [8, 9], "002": 9, "006": 10, "00e": 10, "01": [7, 8, 9, 10, 11, 12, 13], "013": 10, "015": 10, "02": [9, 10, 11, 12, 13], "03": [7, 10], "031": 8, "03e": 10, "04": 11, "0412e": 9, "0476e": 9, "05": [4, 10], "06": [7, 10], "0631e": 7, "07": 5, "0744e": 7, "07e": 9, "08": [7, 8], "09": [3, 5, 7, 8], "0912e": 7, "0e": 4, "0xx": 10, "1": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "10": [3, 4, 8, 9, 10, 11, 12], "100": [8, 9, 11, 12, 13], "1000000000000000e": 8, "1000e": 7, "10079687x": 4, "10d": 9, "10e": 10, "10k": 8, "11": [8, 10, 11, 12, 13], "1103515245": 6, "1119274e": [11, 12, 13], "1137": 4, "1145": [3, 10], "12": [8, 10, 11, 12, 13], "1206148e": 11, "12345": 6, "129": 13, "12f": 6, "13": [3, 10, 11, 12, 13], "14": [10, 12, 13], "1443e": 9, "15": [10, 12, 13], "16": [6, 8, 12, 13], "1631e": 7, "16d": 6, "16ld": 6, "17": [4, 10, 12, 13], "18": [3, 4, 10], "19": [10, 11, 12, 13], "1932e": 9, "1997": [8, 9], "1cm": 4, "1d": [11, 12, 13], "1e": [9, 10], "2": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "20": [4, 6, 8, 9, 10, 11, 12, 13], "200": [11, 12, 13], "2000000000000000e": 8, "20000001e": 10, "20000011e": 10, "2003": 3, "2008": [3, 11, 12, 13], "2010": [11, 12, 13], "2011": 4, "2012": 9, "2014": [3, 7, 9, 10, 12, 13], "2015": 11, "2016": [3, 4, 5, 7, 8, 10], "2018": 3, "2025": 3, "2040061e": [11, 12, 13], "21": [12, 13], "22": [12, 13], "25": [3, 10, 11], "2549737582555113e": 10, "256": 10, "2567": [11, 12, 13], "2592": [11, 12, 13], "2593": [11, 12, 13], "25e": 10, "26": 4, "2619": [11, 12, 13], "275654": 3, "2756548": 10, "2838": 10, "2950": 4, "2971": 4, "2f": 4, "2i": 4, "2le": 9, "2x2piv": 10, "2x_n": 6, "3": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13], "300": 12, "30000": 9, "3000000000000000e": 8, "31": 6, "32": 10, "3204e": 9, "33": 4, "33572664025": 6, "3582223e": 11, "395779648796": 6, "3d": [12, 13], "3e24": 8, "4": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13], "4000000000000000e": 8, "40i2": 8, "4122952e": 11, "42": [3, 10], "46": [11, 12, 13], "4676695e": [11, 12, 13], "4679111e": 11, "486502": 6, "4e6": 10, "4n": 4, "4x5": 7, "5": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "50": 10, "5000e": 9, "5008e": 9, "51": 10, "52": 10, "53": 10, "5364e": 7, "54e": 9, "55": 10, "5502": 10, "5c": 12, "5d": [9, 10], "5e9": 10, "5th": [11, 13], "5x5": [8, 9], "6": [0, 1, 4, 8, 10, 11, 12, 13], "62e": 9, "64": [8, 10, 11], "64bit": 3, "66e": 9, "6th": [11, 13], "7": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13], "72": [8, 12], "72e": 9, "73": 8, "7313e": 7, "7552": 9, "7733184e": 11, "7770878e": [11, 12, 13], "77e": 9, "78e": 9, "7e": [11, 12, 13], "8": [0, 1, 4, 7, 8, 9, 10, 11, 12], "80": [8, 11], "8000000000000000e": 8, "8014036363165360e": 10, "80e": 9, "8852587e": 11, "889": 9, "8957e": 7, "9": [0, 1, 4, 7, 8, 9, 10, 11, 13], "90": 3, "901": 9, "9161": 10, "95": 3, "951878630556": 6, "97": 8, "9753767e": 11, "9938347e": 11, "9960e": 9, "999": [12, 13], "A": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13], "AND": 3, "AS": 3, "As": [7, 8, 9, 10, 11, 12, 13], "At": [7, 8, 9, 10], "BE": 3, "BUT": 3, "BY": 3, "By": [9, 11, 13], "FOR": 3, "For": [0, 1, 3, 4, 6, 8, 9, 10, 11, 12, 13], "IF": 3, "IN": 3, "If": [3, 4, 7, 8, 9, 10, 11, 12, 13], "In": [3, 4, 7, 9, 10, 11, 12, 13], "It": [4, 6, 8, 9, 11, 12, 13], "NO": 3, "NOT": 3, "No": [4, 10, 11], "Not": [8, 10, 11, 12, 13], "OF": 3, "ON": 3, "OR": 3, "On": [9, 10, 12], "One": [8, 10, 11, 12, 13], "SUCH": 3, "Such": [11, 13], "THE": 3, "TO": 3, "That": 10, "The": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11], "There": [1, 4, 10], "These": [11, 12, 13], "To": [0, 1, 3, 4, 9, 11, 12, 13], "With": 4, "_": [9, 12, 13], "_2": [4, 11, 13], "_complex_i": 11, "_i": [12, 13], "_inf": 10, "_lambda": [11, 13], "_lsmr": 4, "_option": 4, "_residu": [11, 13], "_sygv": 12, "_tol": [11, 13], "a_": 9, "ab": [11, 12, 13], "abort": 10, "about": [4, 8, 9, 10, 11, 12, 13], "abov": [3, 4, 9, 10, 11, 12, 13], "abs_tol_lambda": [11, 13], "abs_tol_residu": [11, 13], "absolut": [7, 9, 11, 12, 13], "abx": 12, "ac": 3, "acceler": [11, 12, 13], "accept": [11, 13], "access": [8, 12], "accord": 6, "accordingli": 12, "accur": [4, 11, 12, 13], "accuraci": [4, 11, 12], "acm": [3, 10], "across": 9, "act": 11, "action": [4, 10], "actual": [10, 11, 12, 13], "ad": [7, 9], "add": [4, 7, 8], "add_diagon": 8, "addit": [8, 10, 12, 13], "addition": [3, 12], "adjust": [10, 12, 13], "advanc": [11, 13], "advis": 3, "afact": 10, "affect": [10, 12], "aflop": 10, "after": [4, 8, 10], "again": [4, 6, 10], "against": [3, 11, 12, 13], "aggress": 10, "aid": 4, "akeep": 10, "algebra": [3, 4, 11, 12, 13], "algorithm": [10, 11], "align": 13, "all": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "alloc": [4, 7, 8, 9, 10, 11, 12, 13], "allow": [8, 9, 10, 11, 12, 13], "along": [9, 11, 12, 13], "alpha": [12, 13], "alreadi": 7, "also": [10, 11, 12, 13], "alter": [4, 10], "altern": [3, 11], "although": 8, "alwai": [4, 7, 9], "amalgam": 10, "amount": [11, 12, 13], "an": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "anal": [9, 10, 11, 12, 13], "analys": 10, "analysi": 10, "angl": [11, 13], "ani": [3, 4, 6, 7, 8, 9, 10, 11, 13], "anoth": 4, "ap": 4, "apach": 3, "api": [4, 5], "app": 10, "appar": 4, "appear": [4, 10], "appli": [4, 10, 11, 12, 13], "applic": 9, "apply_gauss_seidel_step": [11, 12, 13], "apply_idx": 11, "apply_laplacian": [11, 12, 13], "appropri": 3, "approx": [12, 13], "approxim": [4, 9, 11, 12, 13], "apv": 4, "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "architectur": [3, 6, 10, 11, 12, 13], "argument": [4, 10], "aris": 3, "around": [8, 11, 13], "arpack": [11, 12, 13], "arrai": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13], "array_bas": [0, 1, 9, 10], "articl": 10, "ascend": [7, 11, 12, 13], "assembli": 10, "assign": [4, 7, 10, 11, 13], "associ": [4, 9, 10, 11, 12, 13], "assort": 5, "assum": [10, 12], "asymptot": [9, 12], "asynchron": 10, "atol": 4, "attempt": 8, "attent": 4, "au": [12, 13], "auction": 10, "auction_scale_sym": 9, "auction_sym": 9, "augment": 9, "autoconf": 3, "autogen": 3, "automat": [8, 10], "auxiliari": [8, 11, 13], "av": 4, "avail": [3, 4, 8, 11, 12, 13], "averag": [9, 11, 12, 13], "avoid": [3, 4, 11, 12, 13], "ax": [4, 10, 11, 12, 13], "ax_0": 4, "ax_n": 6, "b": [4, 6, 9, 10, 11, 12, 13], "backward": [10, 11, 12, 13], "bad": 10, "bar": [4, 12, 13], "base": [0, 1, 4, 6, 8, 9, 10, 11, 12, 13], "becaus": [10, 11, 12, 13], "becom": [4, 9, 11, 12, 13], "been": [4, 7, 9, 10, 11, 12, 13], "befor": [4, 6, 9, 10, 11, 12, 13], "begin": [0, 1, 4, 10, 13], "behaviour": [1, 5, 9, 10], "behind": [11, 13], "being": [4, 6, 12, 13], "belong": [10, 13], "below": [4, 7, 8, 9, 10, 11, 12, 13], "benefit": [4, 9, 11, 12, 13], "best": 3, "beta": [12, 13], "beta_1": [12, 13], "better": [4, 11], "between": [4, 8, 11, 12, 13], "bidiagon": 4, "binari": 3, "bind": 10, "bipartit": 10, "bit": [3, 8, 10], "bitwis": 7, "bla": 10, "block": [10, 11, 12, 13], "boe": 10, "bool": [4, 6, 8, 9, 10, 12, 13], "bool2str": 6, "bore": 8, "both": [3, 7, 8, 9, 10, 11, 12, 13], "bound": [4, 9, 12, 13], "break": [4, 11, 12, 13], "broken": 10, "btol": 4, "bu": [12, 13], "buckl": [11, 12, 13], "buffer": 8, "builddir": 3, "built": 11, "busi": 3, "bwd": 10, "bx": [11, 12, 13], "bxq": [12, 13], "c": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "c_i": 9, "c_j": 9, "cach": 10, "calcul": [9, 11, 12, 13], "call": [4, 6, 7, 8, 10, 11, 12, 13], "can": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "cancel": 10, "cannot": 3, "cardin": 9, "care": 9, "case": [3, 4, 7, 10, 11, 12, 13], "caus": [3, 10, 12], "cbla": [11, 12, 13], "cblas_daxpi": [12, 13], "cblas_dcopi": [11, 12, 13], "cblas_ddot": [12, 13], "cblas_dgemm": [11, 12, 13], "cblas_dnrm2": [12, 13], "cblas_dscal": [12, 13], "cblascolmajor": [11, 12, 13], "cblasnotran": [11, 12, 13], "cblastran": [12, 13], "cc": 3, "ccccc": [0, 1, 10], "cd": 3, "cdot": [12, 13], "central": 11, "certain": 4, "cf_max": 12, "cflag": 3, "chang": [3, 4, 6, 9, 10, 11, 12, 13], "changelog": [4, 8, 11, 13], "char": 8, "charact": 8, "charg": 8, "check": [1, 3, 4, 11, 13], "choic": 4, "choleski": 10, "choos": 10, "chosen": [4, 10], "citat": 3, "clean": 10, "cleanup": 12, "clone": 3, "close": [10, 12, 13], "closer": [12, 13], "closest": 10, "cluster": [11, 12, 13], "cmp": 10, "code": [3, 4, 6, 7, 9, 10, 11, 12, 13], "coeff": 10, "coeffici": [10, 13], "col": [0, 10], "collect": 8, "column": [0, 2, 4, 7, 8, 9, 10, 11, 12, 13], "com": 3, "combin": [7, 9, 10, 11, 13], "command": [3, 10], "common": 6, "commun": [4, 10, 11, 12, 13], "compar": [4, 11, 12, 13], "compat": [3, 4, 10], "compatabil": 10, "compil": [6, 10], "complet": [11, 12, 13], "complex": [5, 8, 11, 12, 13], "compliant": 6, "compon": [4, 10, 11, 12, 13], "compress": [2, 7], "comptabl": 10, "comput": [3, 4, 10, 11, 12, 13], "cond": 4, "condap": 4, "condit": [3, 4, 9, 11, 12, 13], "configur": 10, "congruenti": 6, "conjug": [11, 12, 13], "conlim": 4, "consecut": 10, "consequenti": 3, "consid": [5, 10, 11, 13], "consider": [10, 11, 13], "consist": [0, 1, 10, 11, 13], "const": [4, 8, 9, 10, 11, 12, 13], "constant": 6, "constrain": 12, "constraint": [9, 12], "construct": [9, 10], "contain": [4, 5, 7, 8, 10, 11, 12, 13], "conting": [11, 12, 13], "continu": [4, 9, 10, 12, 13], "contract": 3, "contributor": 3, "control": [4, 9, 11, 12, 13], "convent": 13, "converg": [4, 9, 11, 12, 13], "convers": [5, 13], "convert": [0, 1, 8], "convien": 13, "convienc": 6, "convieni": [6, 12, 13], "cooper": 10, "coord": 2, "coordin": [2, 10], "copi": [3, 12, 13], "copyright": 3, "core": [2, 11, 13], "correct": [4, 11, 12, 13], "correspond": [4, 9, 11, 12, 13], "could": [3, 4], "council": 3, "count": [10, 11], "cover": 10, "cp": 3, "cpu": [10, 11, 12, 13], "cpu_block_s": 10, "cpu_fl": 10, "cpu_flop": 10, "criteria": 11, "csc": [0, 2, 4, 7, 8, 9, 10], "cscale": 9, "ctest": 4, "cubla": 10, "cublas_error": 10, "cuda": [3, 10], "cuda_error": 10, "current": [4, 6, 9, 11, 12, 13], "curv": [12, 13], "cwrap_dsytr": 11, "cwrap_dsytrf": 11, "d": [4, 7, 9, 10, 11, 12, 13], "d_": 10, "d_c": 9, "d_i": 9, "d_r": 9, "dad": 9, "damag": [3, 12], "damp": 4, "data": [0, 1, 2, 3, 4, 8, 11, 12, 13], "datatyp": 5, "davi": [12, 13], "dbl_epsilon": [4, 11, 13], "deal": 12, "dealloc": [4, 10], "decid": 12, "decrement": [12, 13], "dedic": 10, "default": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "defici": 9, "defin": [6, 7, 9, 12, 13], "definit": [5, 7, 8, 10, 11, 12, 13], "degeneraci": 7, "delai": 10, "deleg": 11, "deliv": 9, "delta": [4, 11, 13], "delta_j": [12, 13], "delta_l": [11, 13], "delta_r": [11, 13], "demonstr": [12, 13], "denot": 13, "dens": 3, "densiti": [7, 11, 12, 13], "depend": [4, 9, 10, 11, 12, 13], "depth": [3, 10], "deriv": [3, 9], "describ": [0, 1, 8, 12], "design": [9, 10], "desir": [3, 10, 11, 12, 13], "detail": [4, 8, 9, 10, 11, 12, 13], "detect": [3, 12], "determin": [7, 8, 10, 11, 13], "dev": 3, "develop": 3, "devic": 10, "dexampl": 3, "diagnost": [4, 10, 11, 13], "diagon": [0, 1, 7, 8, 9, 10, 11, 12, 13], "differ": [3, 4, 8, 9, 10, 11, 12, 13], "differenti": [11, 13], "digit": 4, "dimens": [7, 8, 9, 10, 11, 12, 13], "dimension": [11, 12, 13], "direct": [2, 3, 11, 12, 13], "directori": 3, "disabl": 10, "discard": 10, "disclaim": 3, "discoveri": 10, "discret": [11, 13], "distanc": [11, 12, 13], "distguish": 8, "distribut": 3, "divid": [10, 12, 13], "dlibbla": 3, "dlibhwloc": 3, "dliblapack": 3, "dlibmeti": 3, "dlibmetis_vers": 3, "dmetis64": 3, "do": [3, 8, 11, 12, 13], "doc": 7, "document": [3, 4, 5, 7, 13], "doe": [8, 12], "doesn": 5, "doi": [3, 4, 10], "domin": 8, "don": 10, "done": [4, 9], "dot": [12, 13], "doubl": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13], "down": 4, "drawn": 7, "driver": 3, "drop": [10, 12], "dsytr": 11, "dsytrf": 11, "dtest": 3, "dual": 9, "due": 10, "duff": [8, 9], "duplic": [0, 1, 10], "dure": [9, 10], "dx": [3, 10, 11], "e": [3, 4, 7, 8, 9, 10, 11, 12, 13], "each": [4, 6, 7, 8, 9, 10, 11, 12, 13], "easili": 4, "edu": 3, "effect": [10, 11, 13], "effici": [3, 9, 10], "eigenpair": [11, 12, 13], "eigensolv": 2, "eigenval": [12, 13], "eigenvalu": [10, 11, 12, 13], "eigenvector": [11, 12], "either": [1, 4, 7, 8, 9, 10, 11, 12, 13], "element": [8, 12, 13], "elimin": 10, "els": [12, 13], "emploi": [10, 11, 12, 13], "employ": [11, 12, 13], "empti": 12, "encod": 8, "encount": 10, "encourag": [8, 10], "end": [0, 1, 4, 10, 12, 13], "endors": 3, "enhanc": [12, 13], "enough": [4, 11, 12, 13], "ensur": [7, 8, 9, 11, 12, 13], "enter": 10, "entir": [12, 13], "entri": [0, 1, 5, 7, 8, 9, 10, 12], "enum": [5, 7, 8], "environ": 10, "eps_initi": 9, "epsilon": 9, "eq": [5, 6, 13], "equal": [6, 7, 9, 11, 13], "equat": [4, 10, 11, 12, 13], "equilib_sym": 9, "equilibr": 10, "equival": [4, 10], "err_est": [12, 13], "err_lambda": [12, 13], "err_x": [12, 13], "error": [4, 7, 8, 9, 10, 11], "especi": [4, 10], "essenti": [11, 12, 13], "estim": [10, 11], "euclidean": [4, 11, 12, 13], "evalu": 11, "even": 3, "event": [3, 4, 9, 10, 11, 12, 13], "ever": 12, "everi": 4, "evolv": 6, "exact": [4, 10, 12], "exactli": [9, 10], "exampl": 3, "exce": [8, 9, 11, 12, 13], "exceed": [4, 11, 13], "except": [7, 8, 9, 10], "exect": [11, 12, 13], "execut": [4, 9, 10, 13], "exemplari": 3, "exist": [4, 8, 9, 10, 11, 13], "exit": [4, 7, 8, 9, 10, 12], "experienc": [11, 12, 13], "expert": [2, 11], "explan": [11, 13], "explicit": [10, 11], "explicitli": [7, 13], "exploit": 10, "explor": 9, "express": [3, 6], "extra": [8, 11, 12, 13], "extra_left": [12, 13], "extra_right": [12, 13], "extra_spac": 8, "extrem": [9, 11, 12, 13], "f": [11, 12, 13], "f90": 12, "fab": [12, 13], "facil": 3, "facilit": [12, 13], "facotr": 12, "fact": 10, "factor": [11, 12], "factoris": 10, "fail": [4, 7, 8, 9, 10, 12, 13], "failur": [9, 10, 11, 12, 13], "fall": [12, 13], "fals": [4, 6, 8, 9, 10, 12], "far": [11, 13], "fast": 9, "faster": 10, "fatal": [11, 12, 13], "father": 10, "fc": 3, "fcflag": 3, "featur": 12, "feeback": 3, "few": [11, 13], "fewer": [10, 11, 12, 13], "field": 8, "file": [2, 3], "filenam": [8, 10], "fill": [10, 12, 13], "final": [4, 12], "find": [3, 9, 10, 11, 12, 13], "fine": 11, "finish": [11, 12, 13], "first": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13], "fit": 3, "fix": [5, 9], "fkeep": 10, "flag": [3, 4, 7, 9, 10, 11, 12, 13], "flat": 10, "float": [8, 9, 10], "flop": 10, "follow": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "fond": 4, "fong": 4, "foral": 9, "forc": 10, "forest": 10, "form": [3, 4, 6, 9, 12, 13], "format": [2, 4, 5, 7, 9, 10], "former": [8, 11, 12, 13], "fortran": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "forward": [11, 12, 13], "found": [3, 4, 8, 9, 10, 12, 13], "four": 10, "frac": [6, 9, 11, 12, 13], "free": [2, 4, 8, 10], "freed": [4, 8, 10, 11, 12, 13], "freedom": 4, "frequenc": 4, "friendli": [11, 12, 13], "frobeniu": [4, 12, 13], "from": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "front": 10, "full": [4, 7, 9, 10], "fulli": 10, "function": [11, 12, 13], "further": [7, 8, 9, 10, 11, 12, 13], "furthermor": [12, 13], "futher": 12, "fwd": 10, "g": [3, 4, 8, 11, 12, 13], "gap": [11, 13], "gauss": [11, 12, 13], "ge": 9, "gener": [2, 3, 4, 9, 10, 11], "generalis": [12, 13], "generalized_shift": [12, 13], "geometr": 12, "get": 3, "gfortran": 3, "git": 3, "github": 3, "give": [9, 10], "given": [4, 7, 9, 10, 11, 12, 13], "glibc": 6, "gnu": 3, "go": [10, 12], "golub": 4, "good": [3, 4, 11, 12, 13], "goto": [11, 12, 13], "gpu": [3, 10], "gpu_fl": 10, "gpu_flop": 10, "gpu_perf_coeff": 10, "gradient": [11, 12, 13], "graph": 3, "greater": 12, "grid": [11, 12, 13], "grime": 8, "grow": 9, "guarante": [9, 12, 13], "guess": [4, 11, 12, 13], "guidanc": [11, 13], "h": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "ha": [4, 7, 8, 9, 10, 11, 12, 13], "had": [11, 13], "half": 7, "halv": [11, 12, 13], "hand": [8, 10, 12, 13], "handl": [8, 13], "happen": [11, 12, 13], "hat": [9, 12, 13], "have": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13], "head": 4, "header": [8, 11, 12, 13], "help": [3, 4], "henc": [3, 11, 12, 13], "hermitian": [5, 8, 12, 13], "heurist": 9, "high": [3, 4, 11, 12, 13], "highli": [11, 12, 13], "histor": 4, "hogg": [3, 9, 10], "hold": [1, 8, 9, 10, 12], "holder": 3, "how": [3, 4, 9, 10], "howev": [3, 4, 8, 9, 10, 11, 12, 13], "hsl": [3, 8, 9], "hsl_ma97": [11, 13], "hspace": 4, "http": 3, "hungarian": 10, "hungarian_inform": 9, "hungarian_sym": 9, "hwloc": 3, "hybrid": [10, 12, 13], "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "ident": [9, 12], "identifi": [8, 10], "ifort": 3, "ignor": [0, 8, 10], "ii": [9, 10, 11, 12, 13], "ij": [9, 12], "il": 11, "ill": 4, "illustr": [0, 1, 4], "imag": [12, 13], "implement": [11, 12, 13], "impli": 3, "import": [10, 11, 12, 13], "improv": [9, 10, 11, 12], "inbal": 10, "incident": 3, "includ": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "inclus": 13, "incompat": [12, 13], "inconsist": 7, "increas": [1, 4, 9, 12], "increment": 9, "incur": 10, "ind": [12, 13], "indefinit": [2, 3, 5, 8, 9, 11, 13], "indefint": 10, "indep": [12, 13], "independ": [10, 11, 12, 13], "index": [0, 1, 2, 7, 9, 10, 11, 12, 13], "indic": [0, 1, 4, 7, 8, 9, 10, 12, 13], "indirect": 3, "inequ": [12, 13], "inerti": 10, "inertia": [11, 13], "infin": 9, "info": 11, "inform": [4, 7, 8, 9, 10, 11, 12, 13], "initalis": 8, "initi": [6, 8, 9, 10, 11, 12, 13], "initial_se": 6, "initialis": [4, 7, 8, 9, 10, 11, 12, 13], "input": [0, 4, 10], "inria": 9, "insert": 7, "insist": 9, "instal": 2, "instead": [9, 11, 12, 13], "instruct": 3, "insuffici": [11, 13], "int": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13], "int64_t": [0, 1, 6, 7, 8, 9, 10], "int_max": 6, "integ": [3, 6, 8, 10], "intel": 3, "intel64": 3, "intend": 4, "interest": [3, 12], "interfac": [2, 11, 12], "intern": [4, 11, 12, 13], "interpret": 4, "interrupt": 3, "interv": 6, "intialis": [8, 9, 10, 11, 12, 13], "introduct": 2, "invalid": [7, 8], "invari": [11, 12, 13], "invert": [12, 13], "involv": 10, "ip": 3, "ipiv": 11, "ir": 11, "issu": [3, 10], "iter": [4, 9, 11, 12, 13], "itn": 4, "itn_test": 4, "itnlim": 4, "itr": 9, "its": [3, 6, 9, 10, 11, 12, 13], "j": [3, 4, 8, 9, 10, 11, 12, 13], "jacobi": [11, 12, 13], "jcpg": [11, 12], "jj": 9, "job": [10, 11, 12, 13], "journal": 9, "judg": 4, "just": [3, 8], "jx": [12, 13], "jy": [12, 13], "k": [0, 1, 4, 8, 9, 11, 12, 13], "k_1": 4, "k_2": 4, "kahan": [4, 12, 13], "keep": [4, 11, 12, 13], "kept": 10, "kernel": 10, "kind": 6, "kinemat": [12, 13], "knight": 9, "knowledg": 4, "known": [4, 11, 12, 13], "koster": 9, "krylov": [11, 12, 13], "kw": [12, 13], "kx": [12, 13], "ky": [12, 13], "l": [3, 4, 10, 11, 12, 13], "l_": 10, "label": 13, "lambda": [4, 11, 12, 13], "lambda_": [12, 13], "lambda_i": [11, 12, 13], "lambda_j": [12, 13], "lambda_k": [12, 13], "lapack": [3, 11, 12], "laplace2d": [11, 12, 13], "laplacian": [11, 12, 13], "larg": [4, 8, 9, 10, 11, 12, 13], "larger": [4, 11, 13], "largest": [6, 12], "last": [8, 9, 11, 12, 13], "later": 6, "latest": 3, "latter": [3, 8, 11, 12, 13], "lbla": 3, "lcg": 6, "ldl": [11, 13], "ldlt": [10, 11], "ldltf": 11, "ldot": [6, 12, 13], "ldx": [10, 11], "le": [9, 12, 13], "lead": [10, 11, 12], "leak": [10, 11, 12, 13], "least": [2, 3, 7, 9, 11, 12, 13], "leav": [10, 12], "left": [0, 1, 4, 6, 10, 11, 12, 13], "left_gap": [11, 13], "leftmost": [11, 12, 13], "lehmann": [12, 13], "length": [4, 8, 10], "less": [7, 10, 11, 13], "letter": 8, "level": [10, 12, 13], "lewi": 8, "liabil": 3, "liabl": 3, "lib": 3, "libmeti": 3, "like": 10, "limit": [3, 4, 6, 12], "lin": [12, 13], "line": [4, 8, 10, 11, 12, 13], "linear": [3, 4, 6, 9, 11, 12, 13], "linearli": [11, 12, 13], "linerali": [11, 13], "link": 3, "linux": 3, "linvers": 10, "list": 3, "littl": [11, 13], "ll": 4, "lmd": 12, "lmeti": 3, "lmkl_core": 3, "lmkl_gf_lp64": 3, "lmkl_gnu_thread": 3, "lmsr": 4, "load": 10, "local": [3, 10], "locals": 4, "log": 9, "logic": [6, 7], "long": [6, 7, 10], "loop": [9, 11, 12, 13], "loss": [3, 12], "low": [11, 12, 13], "lower": [0, 1, 7, 8, 9, 10, 11, 13], "lsmr": 2, "lsmr_free": 4, "lspral": 3, "lwr_upr_ful": 8, "m": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 13], "machin": [4, 10, 12, 13], "maco": 3, "macro": 6, "magnitud": [3, 12], "mai": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "main": [4, 6, 7, 8, 9, 10, 11, 12, 13], "maintain": [9, 12, 13], "major": 9, "make": [3, 11, 12, 13], "malloc": [11, 12, 13], "manag": 12, "mani": [3, 4, 10], "manufactur": 3, "margin": 12, "mark": 12, "match": [7, 9, 10, 12, 13], "materi": 3, "math": [7, 11, 12, 13], "mathcal": [12, 13], "mathemat": [3, 10], "mathrm": [4, 6, 9, 11, 13], "matlab": 12, "matric": [0, 1, 5, 7, 8, 9, 11, 12, 13], "matrix": [0, 1, 2, 4, 10], "matrix_dup": 10, "matrix_missing_diag": 10, "matrix_mult": 4, "matrix_mult_tran": 4, "matrix_outrang": 10, "matrix_rank": 10, "matrix_typ": [7, 8], "matrix_util": [0, 1, 2], "max": [8, 9, 10, 11, 13], "max_": 9, "max_i": 9, "max_iter": [9, 11, 13], "max_j": 9, "max_left": [11, 13], "max_right": [11, 13], "max_unchang": 9, "maxdepth": 10, "maxfro": 10, "maxfront": 10, "maxim": [9, 12, 13], "maximum": [4, 7, 8, 9, 10, 11, 13], "maxsup": 10, "maxsupernod": 10, "mbox": [4, 9], "mc55": 8, "mc56": 8, "mc64": [9, 10], "mc77": [9, 10], "mean": [9, 12], "meaning": 9, "member": [8, 9, 10, 11, 12, 13], "memori": [4, 8, 10, 11, 12, 13], "mention": [12, 13], "mep": [11, 12, 13], "merchant": 3, "mere": 10, "merg": 10, "mesh": 11, "meson_opt": 3, "messag": [4, 10, 11, 13], "met": 3, "method": 3, "meti": 10, "might": [11, 13], "min": [4, 7, 10, 11], "min_": [12, 13], "min_gap": [12, 13], "min_proport": 9, "minaprod": [12, 13], "minbprod": [12, 13], "minim": [4, 9, 10, 11, 12, 13], "minimum": [9, 10, 12, 13], "minr": 4, "misformat": 1, "miss": [8, 10], "mkdir": 3, "mkl": 3, "mod": 6, "modern": [3, 11, 12, 13], "modif": 3, "modifi": [11, 12, 13], "modul": [2, 8, 11], "more": [3, 4, 10, 11, 12, 13], "most": [1, 10, 11, 13], "move": 12, "mu": 12, "multicor": [11, 12, 13], "multifront": 10, "multipl": [10, 12, 13], "multipli": [11, 12, 13], "must": [1, 3, 4, 7, 8, 10, 11, 12, 13], "mx": 13, "myobj": 3, "myprog": 3, "n": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "n_e": 11, "name": [3, 11], "natur": [7, 11, 12, 13], "ncon": [12, 13], "ne": [0, 5, 10, 12], "need": [0, 1, 9, 10, 12, 13], "neg": [4, 10, 11, 12, 13], "neglig": [3, 12], "neighbour": 10, "neither": 3, "nelt": 8, "nemin": 10, "nep": [11, 12, 13], "netlib": 3, "new": [6, 7, 9, 10, 12, 13], "next": [8, 9, 11, 13], "next_left": [11, 13], "next_right": [11, 13], "nfact": 10, "nflop": 10, "ngpu": 10, "ngrid": [12, 13], "nnz": 7, "node": 10, "non": [1, 7, 8, 9, 10, 11, 12, 13], "non_converg": [11, 12, 13], "none": [4, 10, 11, 12, 13], "nonsingular": 4, "nonsymmetr": 4, "nonzero": 4, "nor": 3, "norm": [4, 10, 11, 12, 13], "normal": [3, 4, 10, 12], "normap": 4, "normapr": 4, "normi": 4, "normr": 4, "not_fi": 10, "not_s": 10, "notabl": [11, 12, 13], "notat": [12, 13], "note": [1, 4, 7, 8, 9, 10, 11, 12, 13], "notic": 3, "now": [3, 9], "npart": 10, "nproc": 10, "nregion": 10, "nrh": 10, "nscale": 9, "nsome": 6, "nthe": 6, "null": [4, 7, 8, 9, 10, 11, 12, 13], "num_delai": 10, "num_factor": 10, "num_flop": 10, "num_neg": 10, "num_neg_d": 11, "num_sup": 10, "num_two": 10, "numa": 10, "number": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13], "numer": [0, 1, 3, 4, 9, 10, 11, 12, 13], "nval": 8, "nvar": 8, "nvcc": 3, "nvcc_arch_sm": 3, "nvccflag": 3, "nvidia": 10, "nx": [11, 12, 13], "ny": [11, 12, 13], "o": [3, 8], "o3": 3, "observ": 6, "obtain": [3, 4, 9, 10], "occur": [7, 12], "off": [4, 10, 11, 12, 13], "offer": [0, 1, 3], "often": 4, "ok": 10, "omp_cancel": 10, "omp_proc_bind": 10, "onc": [7, 10, 12, 13], "one": [0, 1, 4, 7, 10, 11, 12, 13], "onli": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13], "onto": 12, "open": [3, 5, 8], "openbla": 3, "openmp": 10, "oper": [3, 4, 8, 9, 10, 11, 12, 13], "opt": 3, "optim": [3, 9, 11, 12, 13], "option": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 13], "order": [1, 3, 7, 9, 10, 11, 12, 13], "org": 3, "origin": 10, "orthogon": [12, 13], "other": [4, 9, 10, 11, 12, 13], "otherwis": [3, 4, 6, 7, 9, 10, 12, 13], "our": 3, "out": [0, 1, 3, 10, 11, 12, 13], "outlin": [9, 12], "output": [4, 6, 7, 8, 9, 10, 11, 12, 13], "outsid": 10, "over": 9, "overestim": 13, "overhead": 10, "overlin": 10, "overwrit": 10, "overwritten": [8, 10], "ovtchinnikov": [3, 10, 11, 12, 13], "own": [10, 12], "p": [4, 8, 9, 10, 11, 12, 13], "p_i": 9, "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "page": [2, 10], "paid": 4, "paper": [3, 9, 10], "parallel": [10, 13], "paramet": [4, 6, 7, 8, 9, 10, 11, 12, 13], "partial": [9, 10], "particular": [3, 9, 10], "partit": 3, "pass": [3, 9, 10], "path": [3, 9], "pattern": [7, 8, 10], "pencil": 12, "per": [8, 10, 12, 13], "perf": 10, "perform": [3, 4, 9, 11, 12, 13], "period": 11, "permiss": [3, 10], "permit": [3, 8], "permut": [7, 9, 10, 11, 12, 13], "phase": 10, "pick": 3, "piv_ord": 10, "pivot": [10, 11], "pivot_method": 10, "pl": 10, "place": 12, "pld": 10, "pleas": [3, 9, 10, 11, 13], "plu": [10, 11, 13], "plx": 10, "pm": 9, "point": [8, 10, 11, 12, 13], "pointer": [1, 7, 8, 9, 10], "pollut": [12, 13], "poor": [4, 12], "posdef": 10, "posit": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13], "possibl": [3, 4, 7, 10, 11, 12, 13], "post": 7, "posteori": 10, "posteriori": 10, "potenti": 10, "pp": 9, "practic": 12, "pre": 10, "preced": 10, "precond_cor": 12, "precond_expert": 13, "precond_ssmf": 11, "precondit": 4, "precondition": [4, 11, 12, 13], "predict": 10, "prefer": 8, "prefix": 3, "prepar": 4, "preprint": [9, 10], "preprocessor": [6, 7], "presenc": [11, 12, 13], "present": [4, 7, 8, 9, 10], "preserv": 9, "presolv": 10, "prevent": [4, 9, 11, 13], "previou": [6, 9, 12, 13], "price": 9, "primarili": 10, "print": [4, 5, 7, 8, 9, 10, 11, 13], "print_freq_head": 4, "print_freq_itn": 4, "print_level": [10, 11, 13], "printf": [4, 6, 7, 8, 9, 10, 11, 12, 13], "prior": [3, 7], "privat": [4, 11, 12, 13], "prng": [12, 13], "probabl": [4, 6], "problem": [4, 9, 10, 11], "proce": [4, 9], "procedur": [11, 12, 13], "process": [4, 7, 10], "processor": 10, "procur": 3, "prod_": 9, "produc": [6, 7, 8, 9, 10, 11, 12, 13], "product": [3, 4, 9, 12, 13], "profit": 3, "program": 3, "progress": [4, 10, 11, 12, 13], "project": 12, "promot": 3, "properti": [4, 9], "proport": [7, 8, 9], "provid": [3, 4, 8, 9, 10, 11, 12, 13], "pseudo": [2, 8], "ptr": [1, 4, 7, 8, 9, 10], "pure": [11, 13], "purpos": 3, "py": 4, "pz": 4, "q": [8, 12, 13], "q_": 12, "quad": 6, "qualiti": [9, 10], "quick": [11, 13], "quickli": 9, "quotient": 12, "r": [4, 8, 12, 13], "r_": [12, 13], "r_0": 4, "r_i": 9, "r_id": 9, "r_j": [12, 13], "radic": 4, "ral": [8, 9, 10, 11, 12, 13], "ralna": 3, "random": [2, 11, 12, 13], "random_matrix": 2, "randomli": [8, 12, 13], "rang": [0, 1, 6, 7, 9, 10, 11, 12, 13], "rank": [4, 9, 10], "rare": 12, "rate": 9, "rather": 12, "rayleigh": 12, "rb": [2, 10], "rb_peek": 8, "rb_read": 8, "rb_read_opt": 8, "rb_write": 8, "rci": [11, 12, 13], "re": [4, 6], "reach": [4, 11, 13], "read": 10, "real": [5, 6, 8, 9, 10, 11, 12, 13], "reason": [4, 11, 13], "recal": [4, 10, 11, 12, 13], "recalcul": 10, "recommend": [3, 8, 10, 11, 12, 13], "recov": 4, "rectangular": [4, 5, 7, 8, 9, 11], "redefinit": 5, "redistribut": [3, 8], "reduc": [4, 10, 12], "reduct": [12, 13], "refer": [3, 7, 9], "reflect": [3, 9], "region": 10, "regular": 4, "reid": [11, 12, 13], "rel": [4, 10, 11, 12, 13], "rel_tol_lambda": [11, 13], "rel_tol_residu": [11, 13], "releas": [4, 7, 8, 11, 12, 13], "reli": [12, 13], "reliabl": [11, 12, 13], "remain": [7, 10, 12, 13], "remov": 12, "reorder": [12, 13], "reorthagonalis": [12, 13], "reorthogon": 4, "replac": [7, 9, 12, 13], "report": [8, 9, 10, 11, 12, 13], "repres": 8, "reprint": 4, "reproduc": 3, "request": [7, 8, 10, 11, 13], "requir": [3, 4, 7, 8, 9, 10, 11, 12, 13], "research": 9, "reserv": 3, "residu": [4, 11, 12, 13], "residual_norm": [12, 13], "respect": [11, 12, 13], "respons": 12, "rest": [4, 11, 12, 13], "restart": [10, 11, 12, 13], "restor": 6, "restrict": 10, "result": [3, 9, 10, 11], "retain": [3, 12, 13], "return": [4, 6, 7, 9, 10, 11, 12, 13], "reus": 6, "revers": [4, 11, 12, 13], "rewrit": 12, "rh": 4, "right": [0, 1, 3, 4, 6, 8, 10, 11, 12, 13], "right_gap": [11, 13], "rightmost": [11, 12, 13], "ritz": [12, 13], "rl": 3, "rng": 6, "role": [11, 13], "root": 10, "rough": [11, 13], "roughli": 4, "round": [11, 12, 13], "routin": [0, 1, 4, 5, 8, 10, 11, 12, 13], "row": [0, 1, 4, 7, 8, 9, 10, 12, 13], "rr": [12, 13], "rsa": 8, "rscale": 9, "ruiz": [9, 10], "run": [3, 8, 10, 11, 13], "rutherford": 10, "rutherford_bo": 2, "s_ii": 10, "s_k": [12, 13], "sa": 10, "safeguard": [11, 13], "sake": 11, "same": [4, 6, 9, 10, 11, 12, 13], "sampl": [6, 7], "satisfi": [9, 11, 13], "satsifi": 9, "saunder": 4, "save": [12, 13], "sb": 10, "scalar": 4, "scale": [2, 10, 12, 13], "scale_if_singular": 9, "schedul": 10, "scheme": [12, 13], "sci": 4, "scienc": 3, "scope": 10, "scott": [3, 9, 10], "script": 3, "search": [2, 11, 12, 13], "second": [4, 8, 10], "section": [3, 8, 9, 10, 11, 12, 13], "see": [3, 4, 7, 8, 9, 10, 11, 12, 13], "seidel": [11, 12, 13], "select": [7, 11, 12, 13], "sens": 4, "sensit": 12, "sent": 3, "separ": [12, 13], "septemb": 3, "sequenc": [6, 10], "sequenti": 4, "seri": 4, "serial": 10, "servic": 3, "set": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13], "set_2d_laplacian_matrix": 11, "set_laplacian_matrix": 11, "setup": [3, 12, 13], "sever": [11, 12, 13], "sh": 3, "shall": 3, "share": 12, "shift": 12, "shift_invert": 11, "ship": 10, "should": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "show": 9, "shuffl": 9, "siam": [4, 9, 11, 12, 13], "side": [8, 10, 11, 12, 13], "sigma": [9, 11, 12, 13], "sigma_": 9, "significantli": [4, 12, 13], "similar": [4, 9, 10], "simpl": [11, 12, 13], "simplic": 12, "simplifi": [11, 12, 13], "simultan": [11, 12], "sin": [12, 13], "sinc": 10, "sine": [11, 13], "singl": 10, "singular": [7, 9, 10], "size": [7, 8, 9, 10, 11, 12, 13], "sizeof": [11, 12, 13], "skew": [5, 7, 8], "skip": 9, "slightli": 10, "slow": [9, 11, 12, 13], "slower": [3, 10], "slowli": 9, "small": [4, 11, 12, 13], "small_subtree_threshold": 10, "smaller": [4, 12], "smallest": [12, 13], "smfct": 10, "so": [3, 4, 6, 8, 9, 10, 11, 12, 13], "softwar": [3, 10], "solut": [4, 9, 10, 11, 12, 13], "soluton": 4, "solv": [4, 9, 10, 11, 12, 13], "solver": [2, 3, 11, 12, 13], "some": [0, 4, 6, 9, 10], "sort": 7, "sought": 12, "sourc": 3, "space": [8, 11, 13], "span": 12, "spars": [3, 7, 8], "special": 3, "specif": [3, 9, 13], "specifi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "spectrum": [11, 12, 13], "speed": [11, 12, 13], "spral": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "spral_cplx_herm_psdef": 5, "spral_cplx_skew": 5, "spral_cplx_sym": 5, "spral_cplx_sym_indef": 5, "spral_cplx_unsym": 5, "spral_double_complex": 12, "spral_lsmr": 4, "spral_lsmr_default_opt": 4, "spral_lsmr_fre": 4, "spral_lsmr_inform": 4, "spral_lsmr_opt": 4, "spral_lsmr_solv": 4, "spral_matrix_cplx_rect": 5, "spral_matrix_real_rect": 5, "spral_matrix_real_sym_indef": [8, 9], "spral_matrix_typ": [5, 7, 8], "spral_matrix_unspecifi": 5, "spral_matrix_util": [5, 7], "spral_numa_region": 10, "spral_print_matrix": [7, 9], "spral_print_matrix_i64d": 8, "spral_random": [6, 8], "spral_random_initial_se": [6, 7, 12, 13], "spral_random_long": 6, "spral_random_matrix": 7, "spral_random_matrix_findex": 7, "spral_random_matrix_gener": 7, "spral_random_matrix_generate_long": 7, "spral_random_matrix_nonsingular": 7, "spral_random_matrix_sort": 7, "spral_random_r": [12, 13], "spral_rb_default_read_opt": 8, "spral_rb_default_write_opt": 8, "spral_rb_free_handl": 8, "spral_rb_read": 8, "spral_rb_read_opt": 8, "spral_rb_read_ptr32": 8, "spral_rb_writ": 8, "spral_rb_write_opt": 8, "spral_rb_write_ptr32": 8, "spral_real_skew": 5, "spral_real_sym_indef": 5, "spral_real_sym_psdef": 5, "spral_real_unsym": 5, "spral_rutherford_bo": 8, "spral_scal": 9, "spral_scaling_auction_default_opt": 9, "spral_scaling_auction_inform": 9, "spral_scaling_auction_opt": 9, "spral_scaling_auction_sym": 9, "spral_scaling_auction_sym_long": 9, "spral_scaling_auction_unsym": 9, "spral_scaling_auction_unsym_long": 9, "spral_scaling_equilib_default_opt": 9, "spral_scaling_equilib_inform": 9, "spral_scaling_equilib_opt": 9, "spral_scaling_equilib_sym": 9, "spral_scaling_equilib_sym_long": 9, "spral_scaling_equilib_unsym": 9, "spral_scaling_equilib_unsym_long": 9, "spral_scaling_hungarian_default_opt": 9, "spral_scaling_hungarian_inform": 9, "spral_scaling_hungarian_opt": 9, "spral_scaling_hungarian_sym": 9, "spral_scaling_hungarian_sym_long": 9, "spral_scaling_hungarian_unsym": 9, "spral_scaling_hungarian_unsym_long": 9, "spral_ssid": [10, 11, 13], "spral_ssids_alt": 10, "spral_ssids_analys": 10, "spral_ssids_analyse_coord": 10, "spral_ssids_analyse_ptr32": 10, "spral_ssids_analyse_topologi": 10, "spral_ssids_default_opt": 10, "spral_ssids_enquire_indef": 10, "spral_ssids_enquire_posdef": 10, "spral_ssids_factor": 10, "spral_ssids_fre": 10, "spral_ssids_free_akeep": 10, "spral_ssids_free_fkeep": 10, "spral_ssids_inform": 10, "spral_ssids_opt": 10, "spral_ssids_solv": 10, "spral_ssids_solve1": 10, "spral_ssmf": [11, 12, 13], "spral_ssmfe_buckling_doubl": 11, "spral_ssmfe_buckling_double_complex": 11, "spral_ssmfe_cor": [11, 12, 13], "spral_ssmfe_core_default_opt": 12, "spral_ssmfe_core_fre": 12, "spral_ssmfe_core_opt": 12, "spral_ssmfe_default_opt": [11, 13], "spral_ssmfe_doubl": 12, "spral_ssmfe_double_complex": 12, "spral_ssmfe_expert": [11, 12, 13], "spral_ssmfe_expert_buckling_doubl": 13, "spral_ssmfe_expert_buckling_double_complex": 13, "spral_ssmfe_expert_fre": 13, "spral_ssmfe_expert_generalized_doubl": 13, "spral_ssmfe_expert_generalized_double_complex": 13, "spral_ssmfe_expert_generalized_shift_doubl": 13, "spral_ssmfe_expert_generalized_shift_double_complex": 13, "spral_ssmfe_expert_standard_doubl": 13, "spral_ssmfe_expert_standard_double_complex": 13, "spral_ssmfe_expert_standard_shift_doubl": 13, "spral_ssmfe_expert_standard_shift_double_complex": 13, "spral_ssmfe_free_doubl": 11, "spral_ssmfe_free_double_complex": 11, "spral_ssmfe_generalized_doubl": 11, "spral_ssmfe_generalized_double_complex": 11, "spral_ssmfe_generalized_shift_doubl": 11, "spral_ssmfe_generalized_shift_double_complex": 11, "spral_ssmfe_inform": [11, 12, 13], "spral_ssmfe_infrom": 12, "spral_ssmfe_largest_doubl": 12, "spral_ssmfe_largest_double_complex": 12, "spral_ssmfe_opt": [11, 13], "spral_ssmfe_rcid": [11, 12, 13], "spral_ssmfe_rciz": [11, 12, 13], "spral_ssmfe_standard_doubl": 11, "spral_ssmfe_standard_double_complex": 11, "spral_ssmfe_standard_shift_doubl": 11, "spral_ssmfe_standard_shift_double_complex": 11, "sqrt": [4, 9, 11, 12, 13], "squar": [2, 5, 11, 12, 13], "ssid": 2, "ssids_analys": 10, "ssids_analyse_coord": 10, "ssids_opt": 10, "ssmfe": [2, 12, 13], "ssmfe_cor": [2, 11, 13], "ssmfe_expert": [2, 11, 12], "ssmfe_gener": [11, 13], "ssmfe_standard": [11, 13], "stabil": 10, "stage": 10, "stagnat": [12, 13], "standard": [0, 1, 3, 6, 9, 11], "standard_shift": [12, 13], "start": [10, 11, 12, 13], "stat": [4, 7, 9, 10, 11, 12, 13], "state": [6, 7, 8, 12, 13], "static": 3, "statu": [4, 7, 8, 9, 10, 11, 12, 13], "stdint": [6, 8, 10], "stdio": [4, 6, 7, 8, 9, 10, 11, 12, 13], "stdlib": [4, 7, 9, 10, 11, 12, 13], "stdout": [10, 11, 13], "step": [7, 9, 10, 11, 12], "stfc": [3, 9], "still": [5, 12, 13], "stop": [4, 11], "storag": [5, 11, 12, 13], "store": [1, 6, 8, 10, 11, 12, 13], "straightforwardli": [12, 13], "strict": 3, "string": 8, "strong": 13, "strongli": [4, 11, 13], "struct": [4, 8, 9, 10, 11, 12, 13], "structur": [4, 7, 8, 9, 10, 11, 12, 13], "subdiagon": 10, "subdirectori": 3, "subject": 4, "subsequ": 10, "subset": 9, "subspac": [11, 12, 13], "substanti": [11, 12, 13], "substitut": 3, "success": [4, 6, 7, 8, 9, 10, 11, 12, 13], "sudo": 3, "suffici": [3, 4, 11, 12, 13], "suggest": [12, 13], "suit": 3, "suitabl": 4, "sum": [0, 7, 9, 10, 12, 13], "sum_": 9, "supernod": 10, "supplementari": 8, "suppli": [0, 1, 4, 7, 8, 10, 11, 12, 13], "support": [7, 8, 10, 11, 12, 13], "suppos": [4, 10], "suppress": [4, 10, 11, 13], "switch": [4, 11, 12, 13], "symbol": 10, "symmetr": [0, 1, 2, 3, 5, 7, 8, 9], "symmetri": 9, "system": [3, 4, 10, 11, 12, 13], "t": [4, 5, 9, 10, 11, 12, 13], "ta": 4, "tabl": [4, 7, 8, 9, 10, 11, 12, 13], "take": 4, "taken": [6, 9, 11, 13], "task": [4, 10, 11, 12, 13], "tau": 9, "tb": 4, "tbx": [12, 13], "technic": [8, 9, 10, 11, 12, 13], "techniqu": [11, 12, 13], "technologi": 3, "term": [10, 11, 12, 13], "termin": [4, 9, 11, 12, 13], "test": [3, 4, 8, 11, 12, 13], "texttt": 10, "th": [0, 1, 10, 12, 13], "than": [3, 4, 7, 10, 11, 12, 13], "thei": [4, 8, 10, 12, 13], "them": [10, 11, 12, 13], "theorem": [11, 13], "theori": [3, 9], "therefor": [4, 11, 13], "thi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "third": 8, "those": [0, 1, 10, 11, 12, 13], "though": 10, "thread": 10, "three": [8, 11, 12, 13], "threshold": [9, 10], "through": [12, 13], "thu": [11, 12, 13], "tild": [12, 13], "time": [4, 6, 7, 9, 10, 11, 12, 13], "times2": 10, "titl": 8, "togeth": 9, "tol": [9, 12], "tol_x": [11, 13], "toler": [4, 9, 11, 12, 13], "tom": 3, "too": [4, 12, 13], "took": [10, 11], "topograph": 10, "topologi": 10, "tort": 3, "total": [1, 4, 10], "tpp": 10, "tr": [8, 9, 10, 11, 12, 13], "transact": [3, 10], "transform": [9, 11], "transvers": 7, "treat": [10, 11, 13], "tree": 10, "trial": 12, "triangl": 8, "triangular": [0, 1, 8, 10, 11, 13], "true": [3, 4, 6, 8, 9, 10, 11, 12, 13], "try": 4, "tt": [7, 12], "tu": [4, 12, 13], "tune": 11, "turn": [9, 11, 13], "two": [10, 11, 12, 13], "tx": [11, 13], "txt": 3, "type": [0, 1, 7], "type_cod": 8, "typedef": 8, "tz": 4, "u": [4, 8, 9, 10, 11, 12, 13], "u_i": [9, 12, 13], "ubiquit": [11, 12, 13], "ucar": 9, "uk": 3, "umn": 3, "unaccept": 12, "unalt": [4, 10], "unchang": 10, "unconstrain": 12, "undefin": [1, 7], "under": 3, "underli": 8, "unelimin": 10, "unif": 6, "uniform": [7, 11], "uniformli": [6, 8], "uniqu": 4, "unit": [4, 10, 11, 13], "unit_diagnost": [4, 10, 11, 13], "unit_error": [4, 10, 11, 13], "unit_warn": [10, 11, 13], "unknown": [12, 13], "unless": 4, "unlik": [12, 13], "unmatch": 9, "unpredict": 10, "unsymmetr": [0, 1, 5, 7, 8, 9], "until": 12, "up": [4, 10, 11, 13], "updat": [9, 11, 12, 13], "upon": [4, 11, 12, 13], "upper": [0, 4, 8, 12, 13], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "usag": 9, "user": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "user_x": [11, 12, 13], "usr": 3, "usual": 3, "util": [0, 1, 2, 7], "v": [4, 9, 11, 12, 13], "v_i": 9, "v_j": 9, "val": [0, 1, 4, 6, 7, 8, 9, 10], "val_format": 8, "valid": [8, 10], "valu": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "vari": 10, "variabl": [3, 6, 9, 10, 11], "variant": 10, "variou": 9, "vector": [4, 9, 11, 12, 13], "veri": [4, 9, 11, 12, 13], "version": [3, 10], "via": [10, 11], "vicin": [11, 13], "void": [4, 6, 7, 8, 9, 10, 11, 12, 13], "w": [12, 13], "w_": 9, "wa": [7, 10, 11, 13], "wai": [3, 4, 9], "want": [11, 12, 13], "warmstart": 9, "warn": [9, 10, 11, 13], "warranti": 3, "we": [3, 4, 6, 8, 9, 10, 12, 13], "websit": 3, "weight": [7, 10], "well": [12, 13], "were": [4, 10, 11, 12, 13], "when": [8, 9, 11, 12, 13], "whenev": 12, "where": [4, 8, 9, 10, 11, 12, 13], "wherea": 9, "whether": [3, 8, 11, 13], "which": [3, 4, 9, 10, 11, 12, 13], "while": [4, 11, 12, 13], "whilst": 12, "wide": 9, "wikipedia": 6, "window": 3, "wish": [3, 5, 10, 12, 13], "within": [7, 10], "without": [3, 4, 8, 9, 10, 11, 12, 13], "work": [4, 9, 11, 12, 13], "workspac": [11, 12, 13], "would": 10, "wrapper": [8, 11, 13], "write": 3, "written": [3, 8], "wrong": 3, "www": 3, "x": [4, 7, 10, 11, 12, 13], "x1": 10, "x_": 6, "x_0": 4, "x_i": [11, 12, 13], "x_j": [12, 13], "x_n": 6, "x_ptr": 11, "xq": [12, 13], "y": [4, 11, 12, 13], "y_ptr": 11, "yield": 13, "you": [0, 1, 3], "your": 3, "z": [8, 12], "zero": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13]}, "titles": ["Coordinate (Coord) Format", "Compressed Sparse Column (CSC) Format", "The Sparse Parallel Robust Algorithms Library", "Installation", "LSMR - Sparse Least Squares LSMR Solver", "MATRIX_UTIL - Matrix utilities", "RANDOM - Pseudo-random number generator", "RANDOM_MATRIX - Pseudo-random Matrix Generator", "RUTHERFORD_BOEING - RB File Utilities", "SCALING - Sparse matrix scalings", "SSIDS - Sparse Symmetric Indefinite Direct Solver", "SSMFE - Sparse Symmetric Matrix-Free Eigensolver", "SSMFE_CORE - Sparse Symmetric Matrix-Free Eigensolver (Core Algorithm)", "SSMFE_EXPERT - Sparse Symmetric Matrix-Free Eigensolver (Expert interface)"], "titleterms": {"In": 6, "The": [2, 12, 13], "accuraci": 13, "across": 10, "advanc": 10, "algorithm": [2, 4, 9, 12, 13], "auction": 9, "autotool": 3, "avail": 10, "basic": 10, "bla": 3, "boe": 8, "build": 3, "check": 10, "cite": 3, "code": 8, "column": 1, "compil": 3, "compress": 1, "configur": 3, "coord": 0, "coordin": 0, "core": 12, "criteria": 13, "csc": 1, "data": [5, 9, 10], "deriv": [4, 8, 10, 11, 12, 13], "direct": 10, "driver": 10, "eigensolv": [11, 12, 13], "eigenvector": 13, "equilibr": 9, "error": [12, 13], "estim": [4, 12, 13], "exampl": [4, 6, 7, 8, 9, 10, 11, 12, 13], "expert": 13, "factor": [10, 13], "file": 8, "format": [0, 1, 8], "free": [11, 12, 13], "gener": [6, 7, 8, 12, 13], "hermitian": 11, "histori": [4, 5, 7, 8, 11, 12, 13], "hungarian": 9, "improv": 13, "indefinit": 10, "indic": 2, "initi": [4, 7], "instal": 3, "interfac": 13, "invert": 11, "leaf": 10, "least": 4, "librari": [2, 3], "licenc": 3, "lsmr": 4, "macro": 7, "major": [12, 13], "matrix": [5, 7, 8, 9, 11, 12, 13], "matrix_util": 5, "meson": 3, "method": [4, 6, 7, 8, 9, 10, 11, 12, 13], "meti": 3, "norm": 9, "notat": 4, "note": 3, "number": 6, "option": 3, "other": 3, "overview": [10, 11, 12, 13], "parallel": 2, "parti": 3, "partit": 10, "perform": 10, "precondit": [11, 12, 13], "problem": [12, 13], "program": 10, "pseudo": [6, 7], "purpos": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "random": [6, 7, 8], "random_matrix": 7, "rb": 8, "read": 8, "refer": [4, 10, 11, 12, 13], "resourc": 10, "return": 8, "robust": 2, "routin": [6, 7, 9], "rutherford": 8, "rutherford_bo": 8, "scale": [4, 9], "seed": [6, 7], "shift": [11, 13], "small": 10, "solver": [4, 10], "spars": [1, 2, 4, 9, 10, 11, 12, 13], "spral": 3, "spral_random_integ": 6, "spral_random_log": 6, "spral_random_r": 6, "squar": 4, "ssid": [3, 10], "ssmfe": 11, "ssmfe_cor": 12, "ssmfe_expert": 13, "standard": [12, 13], "stop": 13, "subroutin": [4, 8, 10, 11, 12, 13], "subtre": 10, "support": 3, "symmetr": [10, 11, 12, 13], "tabl": 2, "third": 3, "type": [4, 5, 8, 9, 10, 11, 12, 13], "us": 13, "usag": [10, 11, 12, 13], "util": [5, 8], "valu": 8, "version": [4, 5, 7, 8, 11, 12, 13], "work": 10, "write": 8}})