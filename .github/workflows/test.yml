# All actions have a name that will be displayed in the "Actions" page in GitHub.
name: 'CI'

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  build:
    name: GALAHAD/${{ matrix.os }}/${{ matrix.compiler }}/${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        compiler_version: [9, 10, 11, 12]
        include:
          - compiler: gnu
            cc: gcc
            fc: gfortran
            cxx: g++
          - os: ubuntu-latest
            compiler: intel
            compiler_version: 2021.9
            cc: icc
            fc: ifort
            cxx: icpc
          - os: macos-latest
            compiler: intel
            compiler_version: 2021.9
            cc: icc
            fc: ifort
            cxx: icpc
          - os: ubuntu-latest
            compiler: intel-llvm
            compiler_version: 2023.1
            cc: icx
            fc: ifort
            cxx: icpx
          - os: macos-latest
            compiler: clang
            compiler_version: latest
            cc: clang
            fc: gfortran
            cxx: clang++
    runs-on: ${{ matrix.os }}
    env:
      # Set environ for OpenMP
      OMP_CANCELLATION: true
      OMP_PROC_BIND: true
      OMP_NUM_THREADS: 4
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Usually this is always needed
      - uses: actions/checkout@v3

      - name: Install dependencies on Windows
        if: matrix.os == 'windows-latest'
        run: |
          wget https://github.com/JuliaBinaryWrappers/OpenBLAS32_jll.jl/releases/download/OpenBLAS32-v0.3.23%2B0/OpenBLAS32.v0.3.23.x86_64-w64-mingw32-libgfortran5.tar.gz
          mkdir openblas
          tar -xzvf OpenBLAS32.v0.3.23.x86_64-w64-mingw32-libgfortran5.tar.gz -C openblas
          wget https://github.com/JuliaBinaryWrappers/METIS_jll.jl/releases/download/METIS-v5.1.2%2B0/METIS.v5.1.2.x86_64-w64-mingw32.tar.gz
          mkdir metis
          tar -xzvf METIS.v5.1.2.x86_64-w64-mingw32.tar.gz -C metis

      - name: Install dependencies on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libmetis-dev libopenblas-dev

      - name: Install dependencies on MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install automake hwloc metis openblas

      - name: Install GNU C and C++ compilers
        if: matrix.compiler == 'gnu'
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: ${{matrix.compiler_version}}

      - name: Install GNU C and C++ compilers
        if: matrix.compiler == 'clang'
        uses: awvwgk/setup-fortran@main
        with:
          compiler: gcc
          version: 12

      - name: Install classic Intel C and C++ compilers
        if: matrix.compiler == 'intel'
        uses: awvwgk/setup-fortran@main
        with:
          compiler: intel-classic
          version: ${{matrix.compiler_version}}

      - name: Install nextgen Intel C and C++ compilers
        if: matrix.compiler == 'intel-llvm'
        uses: awvwgk/setup-fortran@main
        with:
          compiler: intel
          version: ${{matrix.compiler_version}}

      - name: 'Build'
        run: |
          ./autogen.sh
          if [[ "${{matrix.os}}" == "macos-latest" ]]; then
            ./configure CC=${{matrix.cc}} \
              CXX=${{matrix.cxx}} \
              F77=${{matrix.fc}} \
              FC=${{matrix.fc}} \
              CFLAGS="-g -O2 -Wall -I$(brew --prefix openblas)/include" \
              CXXFLAGS="-g -O2 -Wall -I$(brew --prefix openblas)/include" \
              FCFLAGS="-g -O2 -Wall -pedantic" \
              LIBS="-L$(brew --prefix openblas)/lib -lopenblas" \
              --with-metis="-L$(brew --prefix metis)/lib -lmetis"
          elif [[ "${{matrix.os}}" == "windows-latest" ]]; then
            ./configure CC=${{matrix.cc}} \
              CXX=${{matrix.cxx}} \
              F77=${{matrix.fc}} \
              FC=${{matrix.fc}} \
              CFLAGS="-g -O2 -Wall -I./openblas/include" \
              CXXFLAGS="-g -O2 -Wall -I./openblas/include" \
              FCFLAGS="-g -O2 -Wall -pedantic" \
              LIBS="-L./openblas/bin -lopenblas" \
              --with-metis="-L./metis/bin -lmetis"
          else
            ./configure CC=${{matrix.cc}} \
                        CXX=${{matrix.cxx}} \
                        F77=${{matrix.fc}} \
                        FC=${{matrix.fc}} \
                        CFLAGS="-g -O2 -Wall" \
                        CXXFLAGS="-g -O2 -Wall" \
                        FCFLAGS="-g -O2 -Wall -pedantic"
          fi
          make
      - name: 'Test'
        run: |
          make check
